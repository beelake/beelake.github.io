{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/Beelake/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/Beelake/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/Beelake/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/HELP-US-OUT.txt","path":"font/font-awesome-4.7.0/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/css/font-awesome.css","path":"font/font-awesome-4.7.0/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/css/font-awesome.min.css","path":"font/font-awesome-4.7.0/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/FontAwesome.otf","path":"font/font-awesome-4.7.0/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.eot","path":"font/font-awesome-4.7.0/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.ttf","path":"font/font-awesome-4.7.0/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/animated.less","path":"font/font-awesome-4.7.0/less/animated.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.svg","path":"font/font-awesome-4.7.0/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff","path":"font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff2","path":"font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/bordered-pulled.less","path":"font/font-awesome-4.7.0/less/bordered-pulled.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/core.less","path":"font/font-awesome-4.7.0/less/core.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/fixed-width.less","path":"font/font-awesome-4.7.0/less/fixed-width.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/font-awesome.less","path":"font/font-awesome-4.7.0/less/font-awesome.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/icons.less","path":"font/font-awesome-4.7.0/less/icons.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/larger.less","path":"font/font-awesome-4.7.0/less/larger.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/list.less","path":"font/font-awesome-4.7.0/less/list.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/path.less","path":"font/font-awesome-4.7.0/less/path.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/mixins.less","path":"font/font-awesome-4.7.0/less/mixins.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/rotated-flipped.less","path":"font/font-awesome-4.7.0/less/rotated-flipped.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/screen-reader.less","path":"font/font-awesome-4.7.0/less/screen-reader.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/stacked.less","path":"font/font-awesome-4.7.0/less/stacked.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/variables.less","path":"font/font-awesome-4.7.0/less/variables.less","modified":1,"renderable":1},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/font-awesome.scss","path":"font/font-awesome-4.7.0/scss/font-awesome.scss","modified":1,"renderable":1}],"Cache":[{"_id":"source/Funny-Baidu/index.md","hash":"de5d6a9aaa0519cf125ae11a12fbbd815d0a9148","modified":1609158262000},{"_id":"source/_posts/hexo+github博客搭建.md","hash":"d8b03f90401452d5bb16dfdd8c68b63612f7f030","modified":1609239988651},{"_id":"source/doflake-document/index.md","hash":"3f42a9c2f09690ab466f175e7a6f7f12b17c18d2","modified":1608026458000},{"_id":"source/_posts/[Hexo] 002 从 0 开始制作 Hexo 博客主题.md","hash":"9af8edb86a03717d392f7e97224224e389da56ac","modified":1609239836028},{"_id":"themes/doflake/_config.yml","hash":"1310a989430eb1d3a30a10061d94c08873fe0ad9","modified":1609239653284},{"_id":"themes/doflake/README.md","hash":"eae972ab0a5e30cd2514b8d94a38f640ba202718","modified":1607423324000},{"_id":"themes/doflake/layout/archive.ejs","hash":"6a5964b4eea67488d8bc9c4bb409305aabbf5184","modified":1607423324000},{"_id":"themes/doflake/layout/index.ejs","hash":"1427d080357b96b543bef2792a7e049c4c656719","modified":1607682502000},{"_id":"themes/doflake/layout/layout.ejs","hash":"4b67cc0670ffa069ee0ec05348eac5702fe1f9dd","modified":1607949630000},{"_id":"themes/doflake/layout/post.ejs","hash":"e5e96774fe4d12a3d3497ee8be86bcc89ac07794","modified":1608541452000},{"_id":"themes/doflake/languages/en.yml","hash":"ecd1b1ab0ceba9f68e6a1e54ef058186f8fb6d37","modified":1607423324000},{"_id":"themes/doflake/languages/default.yml","hash":"ecd1b1ab0ceba9f68e6a1e54ef058186f8fb6d37","modified":1607423324000},{"_id":"themes/doflake/languages/zh-CN.yml","hash":"85f9505cba1839f05263ff44c6404f230e75c4df","modified":1607423324000},{"_id":"themes/doflake/layout/_basic/mathjax.ejs","hash":"282e437fa36fdb6d2e538e542411dc8b14f87a45","modified":1607423324000},{"_id":"themes/doflake/layout/_meta/clock.ejs","hash":"7afbf59548a86010edc996e5e73db1db0965f4bf","modified":1607423324000},{"_id":"themes/doflake/layout/_meta/totop.ejs","hash":"b2f493c956f399bacbab340f438c16eb9c173d5c","modified":1607423324000},{"_id":"themes/doflake/layout/_partial/head.ejs","hash":"fd251d95e0c158b8f0b2b2c2716b6f8a1727d4c7","modified":1608621628000},{"_id":"themes/doflake/layout/_partial/header.ejs","hash":"8c21bdd033ec15542c40f9e6dec2b131bdf65163","modified":1607423324000},{"_id":"themes/doflake/layout/_partial/paginator.ejs","hash":"7eb56e89e048a14d25cb113d7135ec2cb9d07c57","modified":1608034754000},{"_id":"themes/doflake/source/css/style.styl","hash":"ff4d723eee7cf0cd76f65b6a7659857ed3488dc2","modified":1607423324000},{"_id":"themes/doflake/source/js/totop.js","hash":"c84ca73192007612f9435884315d04a38f213758","modified":1607423324000},{"_id":"themes/doflake/source/css/_basic/background.styl","hash":"3de6bf288012612bfc092e06057f19dbff036bca","modified":1607423324000},{"_id":"themes/doflake/source/css/_basic/hljs.styl","hash":"dee7472ada7920620f26111573a303e9838edf0b","modified":1608541452000},{"_id":"themes/doflake/source/css/_basic/index.styl","hash":"688c818d935ac13759088b3905344f81189c3943","modified":1608541452000},{"_id":"themes/doflake/source/css/_layout/index.styl","hash":"6563eddc06536d9d5af6bebbb09df78fb057360c","modified":1607423324000},{"_id":"themes/doflake/source/css/_markdown/gutter.styl","hash":"7199235668ed289ad3bd14c6beb63294d6077953","modified":1608542346000},{"_id":"themes/doflake/source/css/_layout/container.styl","hash":"4e9a7dc7f9af13276a4133f33b4e6ac322629793","modified":1607423324000},{"_id":"themes/doflake/source/css/_markdown/hljs.styl","hash":"47306d9960aae5138d6d4a750eff3dc2eadf2eea","modified":1608541716000},{"_id":"themes/doflake/source/css/_markdown/index.styl","hash":"0b69f3691db36db10319a7e768591110419a11d5","modified":1608542232000},{"_id":"themes/doflake/source/css/_markdown/table.styl","hash":"d9b3d7869832bb8b1433a84b51ee73804114ff74","modified":1608548932000},{"_id":"themes/doflake/source/css/_meta/clock.styl","hash":"abefc2b3cfa5dd9d942a2d52e018f94bbd3a0c54","modified":1607423324000},{"_id":"themes/doflake/source/css/_meta/index.styl","hash":"ca291b6eb8d82294f6a251d88895dcb8d0f41869","modified":1607423324000},{"_id":"themes/doflake/source/css/_partial/header.styl","hash":"c4c00bf60ca8c2573d78f4204a92c31ebb3cb59d","modified":1607423324000},{"_id":"themes/doflake/source/css/_partial/archive.styl","hash":"fd944d85d23382f62d2e25805ff52aaf83a12dd4","modified":1607423324000},{"_id":"themes/doflake/source/css/_partial/index.styl","hash":"dd9b951b1fba8912f90962946382bbb4de634731","modified":1607423324000},{"_id":"themes/doflake/source/css/_partial/paginator.styl","hash":"5257b3b2a5dbbb15c0e6ac0a508bc0e5d0f4dac0","modified":1608018018000},{"_id":"themes/doflake/source/css/_partial/post.styl","hash":"84738978c83bbbbadb91793c6a80b5e9163510d3","modified":1607948152000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1477601506000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/bordered-pulled.less","hash":"a2c292137b17406183ad0fdbf4880fd648b9a5ca","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/animated.less","hash":"421f2c4e10191f148c13b8a34e5ff3f484d4c393","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/core.less","hash":"1a37352286619b789d151a06eb4b7551e4c1aaa2","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/fixed-width.less","hash":"ec0c24b97184dab86177660f486b8d08cd636c42","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/font-awesome.less","hash":"9ffe7422dc235450a21f019f410ed359ed151f4b","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/icons.less","hash":"0285a999eb1adad868366678c2d9365b77186a45","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/larger.less","hash":"e7119e82dc50540dbc3472bba7d74282815a7ecc","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/list.less","hash":"f53bc20884a1410d950b4a36a330c5181a8b55ab","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/mixins.less","hash":"3c5b36b0069372b525ed8bbbcf6b3d4d2bed4e78","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/rotated-flipped.less","hash":"95de5de9009714692430b04f9cd4388be8fba8f3","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/stacked.less","hash":"f044077bc8be1a989c245254e81eb084d52d29a7","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/variables.less","hash":"8a5c800747705df16117cc598c1b9f512e873bfe","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_animated.scss","hash":"8daf189b2f8a404495b8424b6fd1ba630dd1c2dc","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_bordered-pulled.scss","hash":"164b6a0a2b307cd293f4a914ab0fcdf643950374","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_core.scss","hash":"55a14a34267edc401b82e5ee41d8bd84fbb5da3f","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_fixed-width.scss","hash":"224417ca266c657849afb2bbcb6dc455894ff387","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_icons.scss","hash":"830e0183337d16c07b1c63838f7593a33ee87b15","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_larger.scss","hash":"940e1c5ebc690283bfaee92560cf15fabedbf6a9","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_list.scss","hash":"4b53ee01513df8b9ce76442b2d8f1851613a435c","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_mixins.scss","hash":"4f3881034a4c11cae8cc915f288477b498a357a2","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/path.less","hash":"1afb4a849059631f76ed2a519d7fb1bd0af14802","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_rotated-flipped.scss","hash":"ca08a0af3da63c2f2a7d3c27a8747637744cc785","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_screen-reader.scss","hash":"2d8563c488f68e75a28d540dd89301ee4ee08c97","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_stacked.scss","hash":"cf6752ee609af36eb293a7197c88d31ecacbbc74","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_variables.scss","hash":"0d6d70535104b42e60d7f44ae6ccf9de023a7b8b","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/font-awesome.scss","hash":"dd83648ea5bc832f87c3c1bf956c54dec065a9bd","modified":1477601504000},{"_id":"themes/doflake/source/js/jquery.min.js","hash":"b063d0aa57f0c50d9bfb9895b76a9467155df7f1","modified":1607423324000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/less/screen-reader.less","hash":"71139132f170ebe7712836210f4d2c4905151899","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1477601504000},{"_id":"themes/doflake/source/font/font-awesome-4.7.0/scss/_path.scss","hash":"080158aeb1bf6df59ec98b2bbed44da61d9c9ca3","modified":1477601504000},{"_id":"public/Funny-Baidu/index.html","hash":"ea36ce1bdb84345baa5106c1ef9dcd4b2b62885b","modified":1609240009704},{"_id":"public/doflake-document/index.html","hash":"7eab117a694a0439ffcfd8bb3d23e0266932d8cc","modified":1609240009704},{"_id":"public/Hexo/Hexo+GitHub-Blog-Building/index.html","hash":"d69720fc6d227976a8c32878c9b5e19fb830b9f0","modified":1609240009704},{"_id":"public/archives/index.html","hash":"38a693d98cc125c952800da64f5bbd8d5998868c","modified":1609240009704},{"_id":"public/archives/2020/index.html","hash":"38a693d98cc125c952800da64f5bbd8d5998868c","modified":1609240009704},{"_id":"public/Hexo/Theme-Made-By-Myself/index.html","hash":"e21277dc1d8a13c809d77e0b60d61158ab927ef4","modified":1609240009704},{"_id":"public/archives/2020/10/index.html","hash":"38a693d98cc125c952800da64f5bbd8d5998868c","modified":1609240009704},{"_id":"public/index.html","hash":"424b38dd376ab7927d1238d6d945851d60523136","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/bordered-pulled.less","hash":"a2c292137b17406183ad0fdbf4880fd648b9a5ca","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/animated.less","hash":"421f2c4e10191f148c13b8a34e5ff3f484d4c393","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/core.less","hash":"1a37352286619b789d151a06eb4b7551e4c1aaa2","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/fixed-width.less","hash":"ec0c24b97184dab86177660f486b8d08cd636c42","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/font-awesome.less","hash":"9ffe7422dc235450a21f019f410ed359ed151f4b","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/icons.less","hash":"0285a999eb1adad868366678c2d9365b77186a45","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/larger.less","hash":"e7119e82dc50540dbc3472bba7d74282815a7ecc","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/list.less","hash":"f53bc20884a1410d950b4a36a330c5181a8b55ab","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/mixins.less","hash":"3c5b36b0069372b525ed8bbbcf6b3d4d2bed4e78","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/path.less","hash":"1afb4a849059631f76ed2a519d7fb1bd0af14802","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/rotated-flipped.less","hash":"95de5de9009714692430b04f9cd4388be8fba8f3","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/screen-reader.less","hash":"71139132f170ebe7712836210f4d2c4905151899","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/stacked.less","hash":"f044077bc8be1a989c245254e81eb084d52d29a7","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/less/variables.less","hash":"8a5c800747705df16117cc598c1b9f512e873bfe","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/scss/font-awesome.scss","hash":"dd83648ea5bc832f87c3c1bf956c54dec065a9bd","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1609240009704},{"_id":"public/css/style.css","hash":"aee0d0e5d768c8e8e29785ddc9812e07606e3e74","modified":1609240009704},{"_id":"public/js/totop.js","hash":"5c133d783da251d5a5b85059707ec9b3afec6ef7","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1609240009704},{"_id":"public/js/jquery.min.js","hash":"aabcbfcd1332e741704318fede8e4c6893245266","modified":1609240009704},{"_id":"public/font/font-awesome-4.7.0/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1609240009704},{"_id":"source/Beelake-Document/index.md","hash":"d7fdd4d3eff720f20192cb6bf9ab6bef75f0b5e6","modified":1609241094666},{"_id":"themes/Beelake/README.md","hash":"eae972ab0a5e30cd2514b8d94a38f640ba202718","modified":1607423324000},{"_id":"themes/Beelake/_config.yml","hash":"5fdd74f041252959cb602cad06fb2ab846ff9c2a","modified":1609240803523},{"_id":"themes/Beelake/languages/default.yml","hash":"ecd1b1ab0ceba9f68e6a1e54ef058186f8fb6d37","modified":1607423324000},{"_id":"themes/Beelake/languages/en.yml","hash":"ecd1b1ab0ceba9f68e6a1e54ef058186f8fb6d37","modified":1607423324000},{"_id":"themes/Beelake/languages/zh-CN.yml","hash":"85f9505cba1839f05263ff44c6404f230e75c4df","modified":1607423324000},{"_id":"themes/Beelake/layout/index.ejs","hash":"1427d080357b96b543bef2792a7e049c4c656719","modified":1607682502000},{"_id":"themes/Beelake/layout/archive.ejs","hash":"6a5964b4eea67488d8bc9c4bb409305aabbf5184","modified":1607423324000},{"_id":"themes/Beelake/layout/layout.ejs","hash":"4b67cc0670ffa069ee0ec05348eac5702fe1f9dd","modified":1607949630000},{"_id":"themes/Beelake/layout/post.ejs","hash":"e5e96774fe4d12a3d3497ee8be86bcc89ac07794","modified":1608541452000},{"_id":"themes/Beelake/layout/_basic/mathjax.ejs","hash":"282e437fa36fdb6d2e538e542411dc8b14f87a45","modified":1607423324000},{"_id":"themes/Beelake/layout/_meta/clock.ejs","hash":"7afbf59548a86010edc996e5e73db1db0965f4bf","modified":1607423324000},{"_id":"themes/Beelake/layout/_meta/totop.ejs","hash":"b2f493c956f399bacbab340f438c16eb9c173d5c","modified":1607423324000},{"_id":"themes/Beelake/layout/_partial/head.ejs","hash":"fd251d95e0c158b8f0b2b2c2716b6f8a1727d4c7","modified":1608621628000},{"_id":"themes/Beelake/layout/_partial/header.ejs","hash":"8c21bdd033ec15542c40f9e6dec2b131bdf65163","modified":1607423324000},{"_id":"themes/Beelake/layout/_partial/paginator.ejs","hash":"7eb56e89e048a14d25cb113d7135ec2cb9d07c57","modified":1608034754000},{"_id":"themes/Beelake/source/css/style.styl","hash":"ff4d723eee7cf0cd76f65b6a7659857ed3488dc2","modified":1607423324000},{"_id":"themes/Beelake/source/js/totop.js","hash":"c84ca73192007612f9435884315d04a38f213758","modified":1607423324000},{"_id":"themes/Beelake/source/css/_basic/background.styl","hash":"3de6bf288012612bfc092e06057f19dbff036bca","modified":1607423324000},{"_id":"themes/Beelake/source/css/_basic/index.styl","hash":"688c818d935ac13759088b3905344f81189c3943","modified":1608541452000},{"_id":"themes/Beelake/source/css/_basic/hljs.styl","hash":"dee7472ada7920620f26111573a303e9838edf0b","modified":1608541452000},{"_id":"themes/Beelake/source/css/_layout/container.styl","hash":"4e9a7dc7f9af13276a4133f33b4e6ac322629793","modified":1607423324000},{"_id":"themes/Beelake/source/css/_layout/index.styl","hash":"6563eddc06536d9d5af6bebbb09df78fb057360c","modified":1607423324000},{"_id":"themes/Beelake/source/css/_markdown/gutter.styl","hash":"7199235668ed289ad3bd14c6beb63294d6077953","modified":1608542346000},{"_id":"themes/Beelake/source/css/_markdown/hljs.styl","hash":"47306d9960aae5138d6d4a750eff3dc2eadf2eea","modified":1608541716000},{"_id":"themes/Beelake/source/css/_markdown/index.styl","hash":"0b69f3691db36db10319a7e768591110419a11d5","modified":1608542232000},{"_id":"themes/Beelake/source/css/_markdown/table.styl","hash":"d9b3d7869832bb8b1433a84b51ee73804114ff74","modified":1608548932000},{"_id":"themes/Beelake/source/css/_meta/clock.styl","hash":"abefc2b3cfa5dd9d942a2d52e018f94bbd3a0c54","modified":1607423324000},{"_id":"themes/Beelake/source/css/_meta/index.styl","hash":"ca291b6eb8d82294f6a251d88895dcb8d0f41869","modified":1607423324000},{"_id":"themes/Beelake/source/css/_partial/archive.styl","hash":"fd944d85d23382f62d2e25805ff52aaf83a12dd4","modified":1607423324000},{"_id":"themes/Beelake/source/css/_partial/header.styl","hash":"c4c00bf60ca8c2573d78f4204a92c31ebb3cb59d","modified":1607423324000},{"_id":"themes/Beelake/source/css/_partial/index.styl","hash":"dd9b951b1fba8912f90962946382bbb4de634731","modified":1607423324000},{"_id":"themes/Beelake/source/css/_partial/paginator.styl","hash":"5257b3b2a5dbbb15c0e6ac0a508bc0e5d0f4dac0","modified":1608018018000},{"_id":"themes/Beelake/source/css/_partial/post.styl","hash":"84738978c83bbbbadb91793c6a80b5e9163510d3","modified":1607948152000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1477601506000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/animated.less","hash":"421f2c4e10191f148c13b8a34e5ff3f484d4c393","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/bordered-pulled.less","hash":"a2c292137b17406183ad0fdbf4880fd648b9a5ca","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/core.less","hash":"1a37352286619b789d151a06eb4b7551e4c1aaa2","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/fixed-width.less","hash":"ec0c24b97184dab86177660f486b8d08cd636c42","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/font-awesome.less","hash":"9ffe7422dc235450a21f019f410ed359ed151f4b","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/icons.less","hash":"0285a999eb1adad868366678c2d9365b77186a45","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/larger.less","hash":"e7119e82dc50540dbc3472bba7d74282815a7ecc","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/list.less","hash":"f53bc20884a1410d950b4a36a330c5181a8b55ab","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/path.less","hash":"1afb4a849059631f76ed2a519d7fb1bd0af14802","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/mixins.less","hash":"3c5b36b0069372b525ed8bbbcf6b3d4d2bed4e78","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/rotated-flipped.less","hash":"95de5de9009714692430b04f9cd4388be8fba8f3","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/screen-reader.less","hash":"71139132f170ebe7712836210f4d2c4905151899","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/stacked.less","hash":"f044077bc8be1a989c245254e81eb084d52d29a7","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/less/variables.less","hash":"8a5c800747705df16117cc598c1b9f512e873bfe","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_animated.scss","hash":"8daf189b2f8a404495b8424b6fd1ba630dd1c2dc","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_bordered-pulled.scss","hash":"164b6a0a2b307cd293f4a914ab0fcdf643950374","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_core.scss","hash":"55a14a34267edc401b82e5ee41d8bd84fbb5da3f","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_fixed-width.scss","hash":"224417ca266c657849afb2bbcb6dc455894ff387","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_icons.scss","hash":"830e0183337d16c07b1c63838f7593a33ee87b15","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_larger.scss","hash":"940e1c5ebc690283bfaee92560cf15fabedbf6a9","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_list.scss","hash":"4b53ee01513df8b9ce76442b2d8f1851613a435c","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_mixins.scss","hash":"4f3881034a4c11cae8cc915f288477b498a357a2","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_rotated-flipped.scss","hash":"ca08a0af3da63c2f2a7d3c27a8747637744cc785","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_path.scss","hash":"080158aeb1bf6df59ec98b2bbed44da61d9c9ca3","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_screen-reader.scss","hash":"2d8563c488f68e75a28d540dd89301ee4ee08c97","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_stacked.scss","hash":"cf6752ee609af36eb293a7197c88d31ecacbbc74","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/_variables.scss","hash":"0d6d70535104b42e60d7f44ae6ccf9de023a7b8b","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/scss/font-awesome.scss","hash":"dd83648ea5bc832f87c3c1bf956c54dec065a9bd","modified":1477601504000},{"_id":"themes/Beelake/source/js/jquery.min.js","hash":"b063d0aa57f0c50d9bfb9895b76a9467155df7f1","modified":1607423324000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1477601504000},{"_id":"themes/Beelake/source/font/font-awesome-4.7.0/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1477601504000}],"Category":[],"Data":[],"Page":[{"layout":"false","_content":"{%raw%}\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"renderer\" content=\"webkit\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta http-equiv=\"Cache-Control\" content=\"no-transform\" />\n    <meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n    <title>让我帮你百度一下 | Let Me Baidu That For You</title>\n\n    <link\n      rel=\"shortcut icon\"\n      href=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/favicon.ico\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/css/style.css\"\n    />\n\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/base64.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/clipboard.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/script.js\"></script>\n  </head>\n  <body>\n    <section id=\"search\">\n      <div class=\"search-header\">\n        <h2>\n          <span class=\"let-me\">让我帮你</span>\n          <img\n            src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/img/baidu_logo.png\"\n            alt=\"百度\"\n            title=\"让我帮你百度一下\"\n          />\n          <span class=\"for-you\">一下</span>\n        </h2>\n      </div>\n\n      <form id=\"search-form\">\n        <div class=\"search-form-group\">\n          <div class=\"search-form-input\">\n            <input\n              type=\"search\"\n              id=\"kw\"\n              maxlength=\"255\"\n              autocomplete=\"off\"\n              required\n            />\n          </div>\n          <button id=\"search-submit\">百度一下</button>\n        </div>\n      </form>\n    </section>\n\n    <section id=\"function\">\n      <p id=\"tips\">输入一个问题，然后点击百度一下</p>\n\n      <button id=\"stop\">快停下！我是自己人</button>\n\n      <div id=\"output\">\n        <textarea id=\"url-output\" rows=\"3\" readonly></textarea>\n        <div class=\"tool-btns\">\n          <button data-clipboard-target=\"#url-output\">复制</button>\n          <button id=\"preview\">预览</button>\n        </div>\n      </div>\n    </section>\n\n    <footer id=\"footer\">\n      <ul class=\"footer-right\">\n        <li>\n          * 本站与百度公司没有任何联系，baidu 以及本站出现的百度公司 Logo\n          是百度公司的商标\n        </li>\n      </ul>\n    </footer>\n\n    <div id=\"arrow\"></div>\n  </body>\n</html>\n{%endraw%}","source":"Funny-Baidu/index.md","raw":"---\nlayout: false\n---\n{%raw%}\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"renderer\" content=\"webkit\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta http-equiv=\"Cache-Control\" content=\"no-transform\" />\n    <meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n    <title>让我帮你百度一下 | Let Me Baidu That For You</title>\n\n    <link\n      rel=\"shortcut icon\"\n      href=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/favicon.ico\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/css/style.css\"\n    />\n\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/base64.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/clipboard.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/script.js\"></script>\n  </head>\n  <body>\n    <section id=\"search\">\n      <div class=\"search-header\">\n        <h2>\n          <span class=\"let-me\">让我帮你</span>\n          <img\n            src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/img/baidu_logo.png\"\n            alt=\"百度\"\n            title=\"让我帮你百度一下\"\n          />\n          <span class=\"for-you\">一下</span>\n        </h2>\n      </div>\n\n      <form id=\"search-form\">\n        <div class=\"search-form-group\">\n          <div class=\"search-form-input\">\n            <input\n              type=\"search\"\n              id=\"kw\"\n              maxlength=\"255\"\n              autocomplete=\"off\"\n              required\n            />\n          </div>\n          <button id=\"search-submit\">百度一下</button>\n        </div>\n      </form>\n    </section>\n\n    <section id=\"function\">\n      <p id=\"tips\">输入一个问题，然后点击百度一下</p>\n\n      <button id=\"stop\">快停下！我是自己人</button>\n\n      <div id=\"output\">\n        <textarea id=\"url-output\" rows=\"3\" readonly></textarea>\n        <div class=\"tool-btns\">\n          <button data-clipboard-target=\"#url-output\">复制</button>\n          <button id=\"preview\">预览</button>\n        </div>\n      </div>\n    </section>\n\n    <footer id=\"footer\">\n      <ul class=\"footer-right\">\n        <li>\n          * 本站与百度公司没有任何联系，baidu 以及本站出现的百度公司 Logo\n          是百度公司的商标\n        </li>\n      </ul>\n    </footer>\n\n    <div id=\"arrow\"></div>\n  </body>\n</html>\n{%endraw%}","date":"2020-12-29T11:01:27.668Z","updated":"2020-12-28T12:24:22.000Z","path":"Funny-Baidu/index.html","title":"","comments":1,"_id":"ckj9vyar40000r8b13qyic2j3","content":"\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"renderer\" content=\"webkit\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta http-equiv=\"Cache-Control\" content=\"no-transform\" />\n    <meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n    <title>让我帮你百度一下 | Let Me Baidu That For You</title>\n\n    <link\n      rel=\"shortcut icon\"\n      href=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/favicon.ico\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/css/style.css\"\n    />\n\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/base64.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/clipboard.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/script.js\"></script>\n  </head>\n  <body>\n    <section id=\"search\">\n      <div class=\"search-header\">\n        <h2>\n          <span class=\"let-me\">让我帮你</span>\n          <img\n            src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/img/baidu_logo.png\"\n            alt=\"百度\"\n            title=\"让我帮你百度一下\"\n          />\n          <span class=\"for-you\">一下</span>\n        </h2>\n      </div>\n\n      <form id=\"search-form\">\n        <div class=\"search-form-group\">\n          <div class=\"search-form-input\">\n            <input\n              type=\"search\"\n              id=\"kw\"\n              maxlength=\"255\"\n              autocomplete=\"off\"\n              required\n            />\n          </div>\n          <button id=\"search-submit\">百度一下</button>\n        </div>\n      </form>\n    </section>\n\n    <section id=\"function\">\n      <p id=\"tips\">输入一个问题，然后点击百度一下</p>\n\n      <button id=\"stop\">快停下！我是自己人</button>\n\n      <div id=\"output\">\n        <textarea id=\"url-output\" rows=\"3\" readonly></textarea>\n        <div class=\"tool-btns\">\n          <button data-clipboard-target=\"#url-output\">复制</button>\n          <button id=\"preview\">预览</button>\n        </div>\n      </div>\n    </section>\n\n    <footer id=\"footer\">\n      <ul class=\"footer-right\">\n        <li>\n          * 本站与百度公司没有任何联系，baidu 以及本站出现的百度公司 Logo\n          是百度公司的商标\n        </li>\n      </ul>\n    </footer>\n\n    <div id=\"arrow\"></div>\n  </body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"renderer\" content=\"webkit\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta http-equiv=\"Cache-Control\" content=\"no-transform\" />\n    <meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n    <title>让我帮你百度一下 | Let Me Baidu That For You</title>\n\n    <link\n      rel=\"shortcut icon\"\n      href=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/favicon.ico\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/css/style.css\"\n    />\n\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/base64.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/clipboard.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/js/script.js\"></script>\n  </head>\n  <body>\n    <section id=\"search\">\n      <div class=\"search-header\">\n        <h2>\n          <span class=\"let-me\">让我帮你</span>\n          <img\n            src=\"https://cdn.jsdelivr.net/gh/heson525/heson-demo/baidu/img/baidu_logo.png\"\n            alt=\"百度\"\n            title=\"让我帮你百度一下\"\n          />\n          <span class=\"for-you\">一下</span>\n        </h2>\n      </div>\n\n      <form id=\"search-form\">\n        <div class=\"search-form-group\">\n          <div class=\"search-form-input\">\n            <input\n              type=\"search\"\n              id=\"kw\"\n              maxlength=\"255\"\n              autocomplete=\"off\"\n              required\n            />\n          </div>\n          <button id=\"search-submit\">百度一下</button>\n        </div>\n      </form>\n    </section>\n\n    <section id=\"function\">\n      <p id=\"tips\">输入一个问题，然后点击百度一下</p>\n\n      <button id=\"stop\">快停下！我是自己人</button>\n\n      <div id=\"output\">\n        <textarea id=\"url-output\" rows=\"3\" readonly></textarea>\n        <div class=\"tool-btns\">\n          <button data-clipboard-target=\"#url-output\">复制</button>\n          <button id=\"preview\">预览</button>\n        </div>\n      </div>\n    </section>\n\n    <footer id=\"footer\">\n      <ul class=\"footer-right\">\n        <li>\n          * 本站与百度公司没有任何联系，baidu 以及本站出现的百度公司 Logo\n          是百度公司的商标\n        </li>\n      </ul>\n    </footer>\n\n    <div id=\"arrow\"></div>\n  </body>\n</html>\n"},{"title":"[Beelake]document","date":"2020-11-27T15:35:17.000Z","_content":"\n介绍 **主题简介 | 主题食用 | 更新日志**\n\n<!--more-->\n\n## 主题简介\n\n### 主题名\n\n&#8195;名称：$Beelake$\n\n&#8195;来源：$[元祖]Beelake$\n\n### 开发人员\n\n&#8192;$[元祖]Beelake$\n\n### 其他\n\n&#8195;- 感谢支持\n\n&#8195;- 如果有好的[提议](https://github.com/beelake/beelake.github.io/issues)，$beelake$ 都会听的 😝\n\n## 主题食用\n\n### #$1$ $Download$ 下载\n\n&#8195;[点我下载合适的版本吧](https://github.com/beelake/Hexo-Theme-beelake)\n\n### #$2$ $Basic Settings$ 基础设置\n\n#### #$2-1$ $Info$ 基本信息\n\n|   属性    |          作用          |   内容   |\n| :-------: | :--------------------: | :------: |\n|  $title$  |      设置网页名称      |   任意   |\n| $favicon$ |      更改网页图标      | 图片链接 |\n| $author$  | 修改第一篇文章上方文字 |   任意   |\n\n#### #$2-2$ $Menu$ 导航栏\n\n **位置：**  第一篇文章上方偏右\n\n|  属性  |   作用    |   内容   |\n| :----: | :-------: | :------: |\n| $name$ | 显示 文字 |   任意   |\n| $link$ |  超链接   | 地址链接 |\n\n**范例：** \n\n```ejs\nSomething:\n  name: 巴拉巴拉\n  link: 我是一个连接\n```\n\n则会对应生成一个 **巴拉巴拉**  点击跳转到 **我是一个连接** \n\n#### #$2-3$ $Background$ 背景图\n\n**位置：** 整页\n\n|     属性     |        作用        |      内容      |\n| :----------: | :----------------: | :------------: |\n|    $link$    |      显示图片      |    图片链接    |\n|   $repeat$   |      是否重复      |   $repeat$   |\n| $attachment$ | 固定 或 随滚动移动 | $attachment$ |\n|    $size$    |      图片大小      |    $size$    |\n\n#### #$2-4$ $Mathjax$ 渲染公式\n\n**作用范围：** 所有公式（包括标题）\n\n**使用方法：** \n\n- 移除 $marked$ 渲染器\n\n```\nnpm uninstall hexo-renderer-marked --save\n```\n\n- 安装 $kramed$ 渲染器\n\n```\nnpm install hexo-renderer-kramed --save\n```\n\n- 打开开关\n\n```ejs\nmathjax:\n  enable: true\n```\n\n\n\n### #$3$ $Layout$ 布局\n\n#### #$3-1$ $Index$_$post$ 主页文章块\n\n**位置：** 主页下的文章块\n\n|     属性      |     作用     |   内容   |\n| :-----------: | :----------: | :------: |\n| $max$_$width$ |   控制宽度   |  像素值  |\n|    $left$     | 距离左边距离 | $margin$ |\n|     $top$     | 距离上边距离 | $margin$ |\n|    $right$    | 距离右边距离 | $margin$ |\n|   $bottom$    | 距离下边距离 | $margin$ |\n|   $radius$    |   文章圆角   |  像素值  |\n\n\n\n### #$PS$ $Stylus$ 属性内容\n\n#### #$PS-1$ $repeat$\n\n|    属性     |          作用          |\n| :---------: | :--------------------: |\n|  $repeat$   | 在 水平和垂直方向 重复 |\n| $repeat-x$  |    在 水平方向 重复    |\n| $repeat-y$  |    在 竖直方向 重复    |\n| $no-repeat$ |         不重复         |\n\n#### #$PS-2$ $attachment$\n\n|   属性   | 作用 |\n| :------: | :--: |\n| $fixed$  | 固定 |\n| $scroll$ | 滚动 |\n\n#### #$PS-3$ $size$\n\n由 $(~width~,~height~)$  组成\n\n关于 $width~/~height$\n\n|     属性     |           作用           |\n| :----------: | :----------------------: |\n|   $length$   |   设置固定宽高（数值）   |\n|    $auto$    |       自动设置宽高       |\n| $percentage$ | 由父元素的百分比设置宽高 |\n|   $cover$    |       覆盖（拉伸）       |\n\n#### #$PS-4$ $margin$\n\n|   属性   |                   作用                   |\n| :------: | :--------------------------------------: |\n|  $auto$  |                   居中                   |\n| $length$ | 规定以具体单位计的数值 $Eg.$ 像素 / 厘米 |\n|   $\\%$   |          以父元素的宽度的百分比          |\n\n\n\n## 更新日志\n\n### $V1.0.2$\n\n**时间：** $Day 12.02$\n\n**注释：** 框架改动，添加 $Meta$，添加支持 $FontAwesome~Icon$，修改 $Partial$\n\n**主要内容：**\n\n-  添加 霓虹灯 $Clock$ \n-  主页文章链接样式\n-  添加 $FontAwesome~Icon$\n-  修改分页器 $Paginator$\n\n\n\n### $V 1.0.1$\n\n**时间：** $Day~11.23$\n\n**注释：** 大规模框架改动，以及大部分数值动态更新\n\n**主要内容：**\n\n- 使用 $hexo-config()$ 实现 $css$ 中数据动态更新\n- 修改框架，更为清晰\n- 添加 $Markdown - table$ 自定义渲染表格\n- 文章圆角\n\n\n\n### $V1.0.0$ \n\n**时间：** Unknown\n\n**注释：** 时间不知道为什么被压缩了呢，变成一个版本了 ( $Day~11.23$ 日前所有更迭 压缩为 一个版本)\n\n**主要内容：**\n\n- 搭建完成主题\n- 添加功能 $Info$ 基本信息\n- 添加功能 $Mathjax$ 渲染公式\n- 添加功能 $Background$ 背景图\n- 添加功能 $Menu$ 导航栏\n\n","source":"Beelake-Document/index.md","raw":"---\ntitle: '[Beelake]document'\ndate: 2020-11-27 23:35:17\n---\n\n介绍 **主题简介 | 主题食用 | 更新日志**\n\n<!--more-->\n\n## 主题简介\n\n### 主题名\n\n&#8195;名称：$Beelake$\n\n&#8195;来源：$[元祖]Beelake$\n\n### 开发人员\n\n&#8192;$[元祖]Beelake$\n\n### 其他\n\n&#8195;- 感谢支持\n\n&#8195;- 如果有好的[提议](https://github.com/beelake/beelake.github.io/issues)，$beelake$ 都会听的 😝\n\n## 主题食用\n\n### #$1$ $Download$ 下载\n\n&#8195;[点我下载合适的版本吧](https://github.com/beelake/Hexo-Theme-beelake)\n\n### #$2$ $Basic Settings$ 基础设置\n\n#### #$2-1$ $Info$ 基本信息\n\n|   属性    |          作用          |   内容   |\n| :-------: | :--------------------: | :------: |\n|  $title$  |      设置网页名称      |   任意   |\n| $favicon$ |      更改网页图标      | 图片链接 |\n| $author$  | 修改第一篇文章上方文字 |   任意   |\n\n#### #$2-2$ $Menu$ 导航栏\n\n **位置：**  第一篇文章上方偏右\n\n|  属性  |   作用    |   内容   |\n| :----: | :-------: | :------: |\n| $name$ | 显示 文字 |   任意   |\n| $link$ |  超链接   | 地址链接 |\n\n**范例：** \n\n```ejs\nSomething:\n  name: 巴拉巴拉\n  link: 我是一个连接\n```\n\n则会对应生成一个 **巴拉巴拉**  点击跳转到 **我是一个连接** \n\n#### #$2-3$ $Background$ 背景图\n\n**位置：** 整页\n\n|     属性     |        作用        |      内容      |\n| :----------: | :----------------: | :------------: |\n|    $link$    |      显示图片      |    图片链接    |\n|   $repeat$   |      是否重复      |   $repeat$   |\n| $attachment$ | 固定 或 随滚动移动 | $attachment$ |\n|    $size$    |      图片大小      |    $size$    |\n\n#### #$2-4$ $Mathjax$ 渲染公式\n\n**作用范围：** 所有公式（包括标题）\n\n**使用方法：** \n\n- 移除 $marked$ 渲染器\n\n```\nnpm uninstall hexo-renderer-marked --save\n```\n\n- 安装 $kramed$ 渲染器\n\n```\nnpm install hexo-renderer-kramed --save\n```\n\n- 打开开关\n\n```ejs\nmathjax:\n  enable: true\n```\n\n\n\n### #$3$ $Layout$ 布局\n\n#### #$3-1$ $Index$_$post$ 主页文章块\n\n**位置：** 主页下的文章块\n\n|     属性      |     作用     |   内容   |\n| :-----------: | :----------: | :------: |\n| $max$_$width$ |   控制宽度   |  像素值  |\n|    $left$     | 距离左边距离 | $margin$ |\n|     $top$     | 距离上边距离 | $margin$ |\n|    $right$    | 距离右边距离 | $margin$ |\n|   $bottom$    | 距离下边距离 | $margin$ |\n|   $radius$    |   文章圆角   |  像素值  |\n\n\n\n### #$PS$ $Stylus$ 属性内容\n\n#### #$PS-1$ $repeat$\n\n|    属性     |          作用          |\n| :---------: | :--------------------: |\n|  $repeat$   | 在 水平和垂直方向 重复 |\n| $repeat-x$  |    在 水平方向 重复    |\n| $repeat-y$  |    在 竖直方向 重复    |\n| $no-repeat$ |         不重复         |\n\n#### #$PS-2$ $attachment$\n\n|   属性   | 作用 |\n| :------: | :--: |\n| $fixed$  | 固定 |\n| $scroll$ | 滚动 |\n\n#### #$PS-3$ $size$\n\n由 $(~width~,~height~)$  组成\n\n关于 $width~/~height$\n\n|     属性     |           作用           |\n| :----------: | :----------------------: |\n|   $length$   |   设置固定宽高（数值）   |\n|    $auto$    |       自动设置宽高       |\n| $percentage$ | 由父元素的百分比设置宽高 |\n|   $cover$    |       覆盖（拉伸）       |\n\n#### #$PS-4$ $margin$\n\n|   属性   |                   作用                   |\n| :------: | :--------------------------------------: |\n|  $auto$  |                   居中                   |\n| $length$ | 规定以具体单位计的数值 $Eg.$ 像素 / 厘米 |\n|   $\\%$   |          以父元素的宽度的百分比          |\n\n\n\n## 更新日志\n\n### $V1.0.2$\n\n**时间：** $Day 12.02$\n\n**注释：** 框架改动，添加 $Meta$，添加支持 $FontAwesome~Icon$，修改 $Partial$\n\n**主要内容：**\n\n-  添加 霓虹灯 $Clock$ \n-  主页文章链接样式\n-  添加 $FontAwesome~Icon$\n-  修改分页器 $Paginator$\n\n\n\n### $V 1.0.1$\n\n**时间：** $Day~11.23$\n\n**注释：** 大规模框架改动，以及大部分数值动态更新\n\n**主要内容：**\n\n- 使用 $hexo-config()$ 实现 $css$ 中数据动态更新\n- 修改框架，更为清晰\n- 添加 $Markdown - table$ 自定义渲染表格\n- 文章圆角\n\n\n\n### $V1.0.0$ \n\n**时间：** Unknown\n\n**注释：** 时间不知道为什么被压缩了呢，变成一个版本了 ( $Day~11.23$ 日前所有更迭 压缩为 一个版本)\n\n**主要内容：**\n\n- 搭建完成主题\n- 添加功能 $Info$ 基本信息\n- 添加功能 $Mathjax$ 渲染公式\n- 添加功能 $Background$ 背景图\n- 添加功能 $Menu$ 导航栏\n\n","updated":"2020-12-29T11:28:18.365Z","path":"Beelake-Document/index.html","_id":"ckj9wmk8s00006wb105vefj6u","comments":1,"layout":"page","content":"<p>介绍 <strong>主题简介 | 主题食用 | 更新日志</strong></p>\n<a id=\"more\"></a>\n\n<h2 id=\"主题简介\"><a href=\"#主题简介\" class=\"headerlink\" title=\"主题简介\"></a>主题简介</h2><h3 id=\"主题名\"><a href=\"#主题名\" class=\"headerlink\" title=\"主题名\"></a>主题名</h3><p>&#8195;名称：$Beelake$</p>\n<p>&#8195;来源：$[元祖]Beelake$</p>\n<h3 id=\"开发人员\"><a href=\"#开发人员\" class=\"headerlink\" title=\"开发人员\"></a>开发人员</h3><p>&#8192;$[元祖]Beelake$</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>&#8195;- 感谢支持</p>\n<p>&#8195;- 如果有好的<a href=\"https://github.com/beelake/beelake.github.io/issues\">提议</a>，$beelake$ 都会听的 😝</p>\n<h2 id=\"主题食用\"><a href=\"#主题食用\" class=\"headerlink\" title=\"主题食用\"></a>主题食用</h2><h3 id=\"1-Download-下载\"><a href=\"#1-Download-下载\" class=\"headerlink\" title=\"#$1$ $Download$ 下载\"></a>#$1$ $Download$ 下载</h3><p>&#8195;<a href=\"https://github.com/beelake/Hexo-Theme-beelake\">点我下载合适的版本吧</a></p>\n<h3 id=\"2-Basic-Settings-基础设置\"><a href=\"#2-Basic-Settings-基础设置\" class=\"headerlink\" title=\"#$2$ $Basic Settings$ 基础设置\"></a>#$2$ $Basic Settings$ 基础设置</h3><h4 id=\"2-1-Info-基本信息\"><a href=\"#2-1-Info-基本信息\" class=\"headerlink\" title=\"#$2-1$ $Info$ 基本信息\"></a>#$2-1$ $Info$ 基本信息</h4><table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$title$</td>\n<td align=\"center\">设置网页名称</td>\n<td align=\"center\">任意</td>\n</tr>\n<tr>\n<td align=\"center\">$favicon$</td>\n<td align=\"center\">更改网页图标</td>\n<td align=\"center\">图片链接</td>\n</tr>\n<tr>\n<td align=\"center\">$author$</td>\n<td align=\"center\">修改第一篇文章上方文字</td>\n<td align=\"center\">任意</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-2-Menu-导航栏\"><a href=\"#2-2-Menu-导航栏\" class=\"headerlink\" title=\"#$2-2$ $Menu$ 导航栏\"></a>#$2-2$ $Menu$ 导航栏</h4><p> <strong>位置：</strong>  第一篇文章上方偏右</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$name$</td>\n<td align=\"center\">显示 文字</td>\n<td align=\"center\">任意</td>\n</tr>\n<tr>\n<td align=\"center\">$link$</td>\n<td align=\"center\">超链接</td>\n<td align=\"center\">地址链接</td>\n</tr>\n</tbody></table>\n<p><strong>范例：</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ejs\">Something:<br>  name: 巴拉巴拉<br>  link: 我是一个连接<br></code></pre></td></tr></table></figure>\n\n<p>则会对应生成一个 <strong>巴拉巴拉</strong>  点击跳转到 <strong>我是一个连接</strong> </p>\n<h4 id=\"2-3-Background-背景图\"><a href=\"#2-3-Background-背景图\" class=\"headerlink\" title=\"#$2-3$ $Background$ 背景图\"></a>#$2-3$ $Background$ 背景图</h4><p><strong>位置：</strong> 整页</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$link$</td>\n<td align=\"center\">显示图片</td>\n<td align=\"center\">图片链接</td>\n</tr>\n<tr>\n<td align=\"center\">$repeat$</td>\n<td align=\"center\">是否重复</td>\n<td align=\"center\">$repeat$</td>\n</tr>\n<tr>\n<td align=\"center\">$attachment$</td>\n<td align=\"center\">固定 或 随滚动移动</td>\n<td align=\"center\">$attachment$</td>\n</tr>\n<tr>\n<td align=\"center\">$size$</td>\n<td align=\"center\">图片大小</td>\n<td align=\"center\">$size$</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-4-Mathjax-渲染公式\"><a href=\"#2-4-Mathjax-渲染公式\" class=\"headerlink\" title=\"#$2-4$ $Mathjax$ 渲染公式\"></a>#$2-4$ $Mathjax$ 渲染公式</h4><p><strong>作用范围：</strong> 所有公式（包括标题）</p>\n<p><strong>使用方法：</strong> </p>\n<ul>\n<li>移除 $marked$ 渲染器</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">npm uninstall hexo-renderer-marked --save<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>安装 $kramed$ 渲染器</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">npm install hexo-renderer-kramed --save<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>打开开关</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ejs\">mathjax:<br>  enable: true<br></code></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-Layout-布局\"><a href=\"#3-Layout-布局\" class=\"headerlink\" title=\"#$3$ $Layout$ 布局\"></a>#$3$ $Layout$ 布局</h3><h4 id=\"3-1-Index-post-主页文章块\"><a href=\"#3-1-Index-post-主页文章块\" class=\"headerlink\" title=\"#$3-1$ $Index$_$post$ 主页文章块\"></a>#$3-1$ $Index$_$post$ 主页文章块</h4><p><strong>位置：</strong> 主页下的文章块</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$max$_$width$</td>\n<td align=\"center\">控制宽度</td>\n<td align=\"center\">像素值</td>\n</tr>\n<tr>\n<td align=\"center\">$left$</td>\n<td align=\"center\">距离左边距离</td>\n<td align=\"center\">$margin$</td>\n</tr>\n<tr>\n<td align=\"center\">$top$</td>\n<td align=\"center\">距离上边距离</td>\n<td align=\"center\">$margin$</td>\n</tr>\n<tr>\n<td align=\"center\">$right$</td>\n<td align=\"center\">距离右边距离</td>\n<td align=\"center\">$margin$</td>\n</tr>\n<tr>\n<td align=\"center\">$bottom$</td>\n<td align=\"center\">距离下边距离</td>\n<td align=\"center\">$margin$</td>\n</tr>\n<tr>\n<td align=\"center\">$radius$</td>\n<td align=\"center\">文章圆角</td>\n<td align=\"center\">像素值</td>\n</tr>\n</tbody></table>\n<h3 id=\"PS-Stylus-属性内容\"><a href=\"#PS-Stylus-属性内容\" class=\"headerlink\" title=\"#$PS$ $Stylus$ 属性内容\"></a>#$PS$ $Stylus$ 属性内容</h3><h4 id=\"PS-1-repeat\"><a href=\"#PS-1-repeat\" class=\"headerlink\" title=\"#$PS-1$ $repeat$\"></a>#$PS-1$ $repeat$</h4><table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$repeat$</td>\n<td align=\"center\">在 水平和垂直方向 重复</td>\n</tr>\n<tr>\n<td align=\"center\">$repeat-x$</td>\n<td align=\"center\">在 水平方向 重复</td>\n</tr>\n<tr>\n<td align=\"center\">$repeat-y$</td>\n<td align=\"center\">在 竖直方向 重复</td>\n</tr>\n<tr>\n<td align=\"center\">$no-repeat$</td>\n<td align=\"center\">不重复</td>\n</tr>\n</tbody></table>\n<h4 id=\"PS-2-attachment\"><a href=\"#PS-2-attachment\" class=\"headerlink\" title=\"#$PS-2$ $attachment$\"></a>#$PS-2$ $attachment$</h4><table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$fixed$</td>\n<td align=\"center\">固定</td>\n</tr>\n<tr>\n<td align=\"center\">$scroll$</td>\n<td align=\"center\">滚动</td>\n</tr>\n</tbody></table>\n<h4 id=\"PS-3-size\"><a href=\"#PS-3-size\" class=\"headerlink\" title=\"#$PS-3$ $size$\"></a>#$PS-3$ $size$</h4><p>由 $(<del>width</del>,<del>height</del>)$  组成</p>\n<p>关于 $width<del>/</del>height$</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$length$</td>\n<td align=\"center\">设置固定宽高（数值）</td>\n</tr>\n<tr>\n<td align=\"center\">$auto$</td>\n<td align=\"center\">自动设置宽高</td>\n</tr>\n<tr>\n<td align=\"center\">$percentage$</td>\n<td align=\"center\">由父元素的百分比设置宽高</td>\n</tr>\n<tr>\n<td align=\"center\">$cover$</td>\n<td align=\"center\">覆盖（拉伸）</td>\n</tr>\n</tbody></table>\n<h4 id=\"PS-4-margin\"><a href=\"#PS-4-margin\" class=\"headerlink\" title=\"#$PS-4$ $margin$\"></a>#$PS-4$ $margin$</h4><table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$auto$</td>\n<td align=\"center\">居中</td>\n</tr>\n<tr>\n<td align=\"center\">$length$</td>\n<td align=\"center\">规定以具体单位计的数值 $Eg.$ 像素 / 厘米</td>\n</tr>\n<tr>\n<td align=\"center\">$%$</td>\n<td align=\"center\">以父元素的宽度的百分比</td>\n</tr>\n</tbody></table>\n<h2 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h2><h3 id=\"V1-0-2\"><a href=\"#V1-0-2\" class=\"headerlink\" title=\"$V1.0.2$\"></a>$V1.0.2$</h3><p><strong>时间：</strong> $Day 12.02$</p>\n<p><strong>注释：</strong> 框架改动，添加 $Meta$，添加支持 $FontAwesome~Icon$，修改 $Partial$</p>\n<p><strong>主要内容：</strong></p>\n<ul>\n<li> 添加 霓虹灯 $Clock$ </li>\n<li> 主页文章链接样式</li>\n<li> 添加 $FontAwesome~Icon$</li>\n<li> 修改分页器 $Paginator$</li>\n</ul>\n<h3 id=\"V-1-0-1\"><a href=\"#V-1-0-1\" class=\"headerlink\" title=\"$V 1.0.1$\"></a>$V 1.0.1$</h3><p><strong>时间：</strong> $Day~11.23$</p>\n<p><strong>注释：</strong> 大规模框架改动，以及大部分数值动态更新</p>\n<p><strong>主要内容：</strong></p>\n<ul>\n<li>使用 $hexo-config()$ 实现 $css$ 中数据动态更新</li>\n<li>修改框架，更为清晰</li>\n<li>添加 $Markdown - table$ 自定义渲染表格</li>\n<li>文章圆角</li>\n</ul>\n<h3 id=\"V1-0-0\"><a href=\"#V1-0-0\" class=\"headerlink\" title=\"$V1.0.0$\"></a>$V1.0.0$</h3><p><strong>时间：</strong> Unknown</p>\n<p><strong>注释：</strong> 时间不知道为什么被压缩了呢，变成一个版本了 ( $Day~11.23$ 日前所有更迭 压缩为 一个版本)</p>\n<p><strong>主要内容：</strong></p>\n<ul>\n<li>搭建完成主题</li>\n<li>添加功能 $Info$ 基本信息</li>\n<li>添加功能 $Mathjax$ 渲染公式</li>\n<li>添加功能 $Background$ 背景图</li>\n<li>添加功能 $Menu$ 导航栏</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>介绍 <strong>主题简介 | 主题食用 | 更新日志</strong></p>","more":"<h2 id=\"主题简介\"><a href=\"#主题简介\" class=\"headerlink\" title=\"主题简介\"></a>主题简介</h2><h3 id=\"主题名\"><a href=\"#主题名\" class=\"headerlink\" title=\"主题名\"></a>主题名</h3><p>&#8195;名称：$Beelake$</p>\n<p>&#8195;来源：$[元祖]Beelake$</p>\n<h3 id=\"开发人员\"><a href=\"#开发人员\" class=\"headerlink\" title=\"开发人员\"></a>开发人员</h3><p>&#8192;$[元祖]Beelake$</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>&#8195;- 感谢支持</p>\n<p>&#8195;- 如果有好的<a href=\"https://github.com/beelake/beelake.github.io/issues\">提议</a>，$beelake$ 都会听的 😝</p>\n<h2 id=\"主题食用\"><a href=\"#主题食用\" class=\"headerlink\" title=\"主题食用\"></a>主题食用</h2><h3 id=\"1-Download-下载\"><a href=\"#1-Download-下载\" class=\"headerlink\" title=\"#$1$ $Download$ 下载\"></a>#$1$ $Download$ 下载</h3><p>&#8195;<a href=\"https://github.com/beelake/Hexo-Theme-beelake\">点我下载合适的版本吧</a></p>\n<h3 id=\"2-Basic-Settings-基础设置\"><a href=\"#2-Basic-Settings-基础设置\" class=\"headerlink\" title=\"#$2$ $Basic Settings$ 基础设置\"></a>#$2$ $Basic Settings$ 基础设置</h3><h4 id=\"2-1-Info-基本信息\"><a href=\"#2-1-Info-基本信息\" class=\"headerlink\" title=\"#$2-1$ $Info$ 基本信息\"></a>#$2-1$ $Info$ 基本信息</h4><table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$title$</td>\n<td align=\"center\">设置网页名称</td>\n<td align=\"center\">任意</td>\n</tr>\n<tr>\n<td align=\"center\">$favicon$</td>\n<td align=\"center\">更改网页图标</td>\n<td align=\"center\">图片链接</td>\n</tr>\n<tr>\n<td align=\"center\">$author$</td>\n<td align=\"center\">修改第一篇文章上方文字</td>\n<td align=\"center\">任意</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-2-Menu-导航栏\"><a href=\"#2-2-Menu-导航栏\" class=\"headerlink\" title=\"#$2-2$ $Menu$ 导航栏\"></a>#$2-2$ $Menu$ 导航栏</h4><p> <strong>位置：</strong>  第一篇文章上方偏右</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$name$</td>\n<td align=\"center\">显示 文字</td>\n<td align=\"center\">任意</td>\n</tr>\n<tr>\n<td align=\"center\">$link$</td>\n<td align=\"center\">超链接</td>\n<td align=\"center\">地址链接</td>\n</tr>\n</tbody></table>\n<p><strong>范例：</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ejs\">Something:<br>  name: 巴拉巴拉<br>  link: 我是一个连接<br></code></pre></td></tr></table></figure>\n\n<p>则会对应生成一个 <strong>巴拉巴拉</strong>  点击跳转到 <strong>我是一个连接</strong> </p>\n<h4 id=\"2-3-Background-背景图\"><a href=\"#2-3-Background-背景图\" class=\"headerlink\" title=\"#$2-3$ $Background$ 背景图\"></a>#$2-3$ $Background$ 背景图</h4><p><strong>位置：</strong> 整页</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$link$</td>\n<td align=\"center\">显示图片</td>\n<td align=\"center\">图片链接</td>\n</tr>\n<tr>\n<td align=\"center\">$repeat$</td>\n<td align=\"center\">是否重复</td>\n<td align=\"center\">$repeat$</td>\n</tr>\n<tr>\n<td align=\"center\">$attachment$</td>\n<td align=\"center\">固定 或 随滚动移动</td>\n<td align=\"center\">$attachment$</td>\n</tr>\n<tr>\n<td align=\"center\">$size$</td>\n<td align=\"center\">图片大小</td>\n<td align=\"center\">$size$</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-4-Mathjax-渲染公式\"><a href=\"#2-4-Mathjax-渲染公式\" class=\"headerlink\" title=\"#$2-4$ $Mathjax$ 渲染公式\"></a>#$2-4$ $Mathjax$ 渲染公式</h4><p><strong>作用范围：</strong> 所有公式（包括标题）</p>\n<p><strong>使用方法：</strong> </p>\n<ul>\n<li>移除 $marked$ 渲染器</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">npm uninstall hexo-renderer-marked --save<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>安装 $kramed$ 渲染器</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">npm install hexo-renderer-kramed --save<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>打开开关</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ejs\">mathjax:<br>  enable: true<br></code></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-Layout-布局\"><a href=\"#3-Layout-布局\" class=\"headerlink\" title=\"#$3$ $Layout$ 布局\"></a>#$3$ $Layout$ 布局</h3><h4 id=\"3-1-Index-post-主页文章块\"><a href=\"#3-1-Index-post-主页文章块\" class=\"headerlink\" title=\"#$3-1$ $Index$_$post$ 主页文章块\"></a>#$3-1$ $Index$_$post$ 主页文章块</h4><p><strong>位置：</strong> 主页下的文章块</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n<th align=\"center\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$max$_$width$</td>\n<td align=\"center\">控制宽度</td>\n<td align=\"center\">像素值</td>\n</tr>\n<tr>\n<td align=\"center\">$left$</td>\n<td align=\"center\">距离左边距离</td>\n<td align=\"center\">$margin$</td>\n</tr>\n<tr>\n<td align=\"center\">$top$</td>\n<td align=\"center\">距离上边距离</td>\n<td align=\"center\">$margin$</td>\n</tr>\n<tr>\n<td align=\"center\">$right$</td>\n<td align=\"center\">距离右边距离</td>\n<td align=\"center\">$margin$</td>\n</tr>\n<tr>\n<td align=\"center\">$bottom$</td>\n<td align=\"center\">距离下边距离</td>\n<td align=\"center\">$margin$</td>\n</tr>\n<tr>\n<td align=\"center\">$radius$</td>\n<td align=\"center\">文章圆角</td>\n<td align=\"center\">像素值</td>\n</tr>\n</tbody></table>\n<h3 id=\"PS-Stylus-属性内容\"><a href=\"#PS-Stylus-属性内容\" class=\"headerlink\" title=\"#$PS$ $Stylus$ 属性内容\"></a>#$PS$ $Stylus$ 属性内容</h3><h4 id=\"PS-1-repeat\"><a href=\"#PS-1-repeat\" class=\"headerlink\" title=\"#$PS-1$ $repeat$\"></a>#$PS-1$ $repeat$</h4><table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$repeat$</td>\n<td align=\"center\">在 水平和垂直方向 重复</td>\n</tr>\n<tr>\n<td align=\"center\">$repeat-x$</td>\n<td align=\"center\">在 水平方向 重复</td>\n</tr>\n<tr>\n<td align=\"center\">$repeat-y$</td>\n<td align=\"center\">在 竖直方向 重复</td>\n</tr>\n<tr>\n<td align=\"center\">$no-repeat$</td>\n<td align=\"center\">不重复</td>\n</tr>\n</tbody></table>\n<h4 id=\"PS-2-attachment\"><a href=\"#PS-2-attachment\" class=\"headerlink\" title=\"#$PS-2$ $attachment$\"></a>#$PS-2$ $attachment$</h4><table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$fixed$</td>\n<td align=\"center\">固定</td>\n</tr>\n<tr>\n<td align=\"center\">$scroll$</td>\n<td align=\"center\">滚动</td>\n</tr>\n</tbody></table>\n<h4 id=\"PS-3-size\"><a href=\"#PS-3-size\" class=\"headerlink\" title=\"#$PS-3$ $size$\"></a>#$PS-3$ $size$</h4><p>由 $(<del>width</del>,<del>height</del>)$  组成</p>\n<p>关于 $width<del>/</del>height$</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$length$</td>\n<td align=\"center\">设置固定宽高（数值）</td>\n</tr>\n<tr>\n<td align=\"center\">$auto$</td>\n<td align=\"center\">自动设置宽高</td>\n</tr>\n<tr>\n<td align=\"center\">$percentage$</td>\n<td align=\"center\">由父元素的百分比设置宽高</td>\n</tr>\n<tr>\n<td align=\"center\">$cover$</td>\n<td align=\"center\">覆盖（拉伸）</td>\n</tr>\n</tbody></table>\n<h4 id=\"PS-4-margin\"><a href=\"#PS-4-margin\" class=\"headerlink\" title=\"#$PS-4$ $margin$\"></a>#$PS-4$ $margin$</h4><table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$auto$</td>\n<td align=\"center\">居中</td>\n</tr>\n<tr>\n<td align=\"center\">$length$</td>\n<td align=\"center\">规定以具体单位计的数值 $Eg.$ 像素 / 厘米</td>\n</tr>\n<tr>\n<td align=\"center\">$%$</td>\n<td align=\"center\">以父元素的宽度的百分比</td>\n</tr>\n</tbody></table>\n<h2 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h2><h3 id=\"V1-0-2\"><a href=\"#V1-0-2\" class=\"headerlink\" title=\"$V1.0.2$\"></a>$V1.0.2$</h3><p><strong>时间：</strong> $Day 12.02$</p>\n<p><strong>注释：</strong> 框架改动，添加 $Meta$，添加支持 $FontAwesome~Icon$，修改 $Partial$</p>\n<p><strong>主要内容：</strong></p>\n<ul>\n<li> 添加 霓虹灯 $Clock$ </li>\n<li> 主页文章链接样式</li>\n<li> 添加 $FontAwesome~Icon$</li>\n<li> 修改分页器 $Paginator$</li>\n</ul>\n<h3 id=\"V-1-0-1\"><a href=\"#V-1-0-1\" class=\"headerlink\" title=\"$V 1.0.1$\"></a>$V 1.0.1$</h3><p><strong>时间：</strong> $Day~11.23$</p>\n<p><strong>注释：</strong> 大规模框架改动，以及大部分数值动态更新</p>\n<p><strong>主要内容：</strong></p>\n<ul>\n<li>使用 $hexo-config()$ 实现 $css$ 中数据动态更新</li>\n<li>修改框架，更为清晰</li>\n<li>添加 $Markdown - table$ 自定义渲染表格</li>\n<li>文章圆角</li>\n</ul>\n<h3 id=\"V1-0-0\"><a href=\"#V1-0-0\" class=\"headerlink\" title=\"$V1.0.0$\"></a>$V1.0.0$</h3><p><strong>时间：</strong> Unknown</p>\n<p><strong>注释：</strong> 时间不知道为什么被压缩了呢，变成一个版本了 ( $Day~11.23$ 日前所有更迭 压缩为 一个版本)</p>\n<p><strong>主要内容：</strong></p>\n<ul>\n<li>搭建完成主题</li>\n<li>添加功能 $Info$ 基本信息</li>\n<li>添加功能 $Mathjax$ 渲染公式</li>\n<li>添加功能 $Background$ 背景图</li>\n<li>添加功能 $Menu$ 导航栏</li>\n</ul>"}],"Post":[{"title":"从 0 开始制作 Hexo 博客主题","date":"2020-10-26T12:01:32.000Z","link_c":"Hexo","link_name":"Theme-Made-By-Myself","top":2002,"mathjax":true,"_content":"\n## 写在前面\n本文将会从零开始开发一个简单的博客主题。样式主要参考 `Hexo theme` 中的 `Noise` 主题。\n\n<!-- More -->\n\n开始之前你需要了解：\n- 模板引擎 ejs官网\n- CSS预处理器\n- Hexo 文档\n\n本文使用的模板引擎为 `ejs`，使用的 CSS 预处理器为 `stylus`。这也是 `hexo` 项目预装了的 `render` 插件，如果想使用其他模板引擎或者其他 `CSS` 预处理器，可以安装相对应的 `render` 插件。例如我的 `Even` 主题使用的是 `Swig` 与 `SCSS`。\n目录结构\n主题目录结构以自带的 `landscape` 主题为例：\n.\n├── languages  语言文件，用于国际化\n├── layout     页面模板文件\n├── scripts    Hexo 脚本\n└── source     主题资源文件，包括页面样式，脚本，字体等\n我们在 themes 中新建 `theme-example` 文件夹，然后在 `theme-demo` 中按照 `landscape` 主题的目录结构新建 `languages`，`layout`，`scripts` 与 source 文件夹。\n## 创建布局模板\n在 `layout` 中创建 `index.ejs` 文件，首页将会使用该布局模板生成 HTML 文件。\n`layout/index.ejs:`\n```js\n<html>\n  <head>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n    <meta content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" name=\"viewport\">\n    <title>Home</title>\n  </head>\n  <body>\n    <h1>Hello Word</h1>\n  </body>\n</html>\n```\n修改站点配置文件中的主题配置，使用我们刚刚创建的 `theme-example` 主题：\n```yml\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: theme-example\n```\n## 运行\n`hexo clean`   清除`public`静态文件\n`hexo generate` 生成`public`静态文件\n`hexo server --debug` 以 `debug` 模式开启 `Hexo` 本地服务器预览，访问 http://localhost:4000/。\n\n![](http://ww2.sinaimg.cn/large/006tNc79gw1farp8irho3j30dq058t8s.jpg)\n \n## 写作\n在工作文件夹中执行这条命令来新建一篇文章，`title`即为文章的标题。\n```\nhexo new <title>　　\n```\n终端会返回一条信息，告诉你文章源文件存放在哪里：\n\n![](https://img2018.cnblogs.com/blog/826333/201906/826333-20190604095056843-1809346942.png)\n \n## 添加页面导航\n现在我们需要在页面中添加导航，由于导航不单单会在首页出现，所以我们在 `layout` 中创建共用的布局文件 `layout.ejs`， 同时创建 `_partial/head.ejs` 保存 HTML 的 `head` 以及创建 `_partial/header.ejs` 文件，编写页面导航部分。\n`layout/layout.ejs:`\n```js\n<!DOCTYPE html>\n<html>\n  <%- partial('_partial/head') %>\n  <body>\n    <%- partial('_partial/header') %>\n    <main class=\"main\">\n      <%- body %>\n    </main>\n  </body>\n</html>\n```\n`layout.ejs` 文件通过 `partial()` 函数来包含其他文件，使得我们能够更好的组织代码。详见 `Templates | Hexo`。\n`layout/_partial/head.ejs:`\n```js\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" name=\"viewport\">\n  <title><%= config.title %></title>\n</head>\n```\n这里使用了 `config` 变量，该变量包含的是站点配置（即站点根目录下 `_config.yml` 中的配置）。除此之外，`Hexo` 还提供了许多变量可在模板中使用，详见 `Variables | Hexo`。\n`layout/_partial/header.ejs:`\n```js\n<header class=\"header\">\n  <div class=\"blog-title\">\n    <a href=\"<%- url_for() %>\" class=\"logo\"><%= config.title %></a>\n  </div>\n  <nav class=\"navbar\">\n    <ul class=\"menu\">\n      <li class=\"menu-item\">\n        <a href=\"/\" class=\"menu-item-link\">Home</a>\n      </li>\n      <li class=\"menu-item\">\n        <a href=\"/archives\" class=\"menu-item-link\">Archive</a>\n      </li>\n    </ul>\n  </nav>\n</header>\n```\n接着我们清空 `index.ejs` 中的内容，并添加 `<h2>Hello World</h2>`。在 `layout` 目录下的 `index.ejs` 会自动继承 `layout.ejs`，并将其中的内容填入 `<%- body %>` 的位置。我们将得到一个有导航菜单的 `Hello World` 页面。\n\n![](http://ww3.sinaimg.cn/large/006tNc79gw1farv6wgpe1j308t05tjrk.jpg)\n\n## 添加主题配置文件\n实际上我们需要让导航菜单根据我们的需要显示不同的项，上面这种写法不方便修改。所以我们会在主题的配置文件中添加导航菜单的配置。在 `thmem-demo` 下新建主题的配置文件 `_config.yml`，在其中添加需要配置的字段。然后可以通过`theme`这个变量来拿到该配置文件中的配置。\n`theme-demo/_config.yml:`\n```yml\nmenu:\n  Home: /\n  Archives: /archives\n```\n这样我们就可以在 `header.ejs` 中使用 `theme.menu` 获取到导航菜单的设置。将 `header.ejs` 修改为：\n```js\n<header class=\"header\">\n  <div class=\"blog-title\">\n    <a href=\"<%- url_for() %>\" class=\"logo\"><%= config.title %></a>\n  </div>\n  <nav class=\"navbar\">\n    <ul class=\"menu\">\n      <% for (name in theme.menu) { %>\n        <li class=\"menu-item\">\n          <a href=\"<%- url_for(theme.menu[name]) %>\" class=\"menu-item-link\"><%= name %></a>\n        </li>\n      <% } %>\n    </ul>\n  </nav>\n</header>\n```\n当需要在导航中添加链接的时候就可以在配置文件中直接添加，例如添加 `Github` 的链接：\n```yml\nmenu:\n  Home: /\n  Archives: /archives\n  Github: https://github.com/ahonn\n```\n除此之外还可以添加其他需要的配置，例如 `RSS`，评论等等。\n## 添加首页文章列表\n接着我们完善首页的模板，使其能够显示文章列表。前面已经说过 `Hexo` 提供了各种有用的变量，在这里将会使用到 `page` 这个变量。`page` 会根据不同的页面拥有不同的属性。具体有什么属性，可以获取到哪些数据可以查看[这里](https://hexo.io/docs/variables.html#Page-Variables)。\n那么这里我们会使用 `page` 变量的 `posts` 属性拿到文章数据的集合。编辑 `index.ejs` 文件：\n```js\n<section class=\"posts\">\n  <% page.posts.each(function (post) { %>\n    <article class=\"post\">\n      <div class=\"post-title\">\n        <a class=\"post-title-link\" href=\"<%- url_for(post.path) %>\"><%= post.title %></a>\n      </div>\n      <div class=\"post-content\">\n        <%- post.content %>\n      </div>\n      <div class=\"post-meta\">\n        <span class=\"post-time\"><%- date(post.date, \"YYYY-MM-DD\") %></span>\n      </div>\n    </article>\n  <% }) %>\n</section>\n```\n从 `page.posts` 中获取单篇文章的数据，并获取文章的标题，内容等数据填充到模板中。处理文章创建时间的时候使用了 `date()` 函数，这是 `Hexo` 提供的时间处理的辅助函数。本文中使用到的函数如无特别说明，即为 `Hexo` 的辅助函数。\n## 文章摘录\n由于首页显示文章内容时使用的是 `post.content`，即文章的全部内容。所以首页会显示每一篇文章的内容，实际上我们并不想在首页显示那么多内容，只想显示文章的摘录。\n`Hexo` 提供了 `excerpt` 属性来获取文章的摘录部分，不过这里需要在文章中添加一个 `<!-- more -->` 标记。添加了这个标记之后，`post.excerpt` 将会获取到标记之前的内容。如果没有这个标记，那么 `post.excerpt` 会是空的。所以我们可以把首页文章内容部分的 `post.content` 替换成 `post.excerpt`。\n```js\n<div class=\"post-content\">\n  <%- post.excerpt %>\n</div>\n```\n## 添加页面样式\n到目前为止，我们完成了首页的页面结构，但是并没有添加样式，所以看起来很丑。我们在 `source` 文件中创建一个 `css` 文件夹来存放样式文件。\n由于 `Hexo` 在新建项目的时候会安装 `hexo-renderer-stylus` 这个插件，所以我们无需其他步骤，只需要将样式文件放到 `css` 文件夹中。`Hexo` 在生成页面的时候会将 `source` 中的所有文件复制到生成的 `public` 文件中，并且在此之前会编译 `styl` 为 `css` 文件。\n在 `css` 文件夹中创建 `style.styl`，编写一些基础的样式，并把所有样式 `import` 到这个文件。所以最终编译之后只会有 `style.css` 一个文件。创建 `_partial/header.styl` 与 `_partial/post.style` 存放页面导航以及文章的样式，并且在 `style.styl` 中 `import` 这两个文件。\n`_partial/header.styl:`\n```css\n.header {\n  margin-top: 2em\n  display: flex\n  align-items: baseline\n  justify-content: space-between\n\n  .blog-title .logo {\n    color: #AAA;\n    font-size: 2em;\n    font-family: \"Comic Sans MS\",cursive,LiSu,sans-serif;\n    text-decoration: none;\n  }\n\n  .menu {\n    margin: 0;\n    padding: 0;\n\n    .menu-item {\n      display: inline-block;\n      margin-right: 10px;\n    }\n\n    .menu-item-link {\n      color: #AAA;\n      text-decoration: none;\n\n      &:hover {\n        color: #368CCB;\n      }\n    }\n  }\n}\n```\n`_partial/post.styl:`\n```css\n.post {\n  margin: 1em auto;\n  padding: 30px 50px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  box-shadow: 0 0 2px #ddd;\n}\n\n.posts  {\n  .post:first-child {\n    margin-top: 0;\n  }\n\n  .post-title {\n    font-size: 1.5em;\n\n    .post-title-link {\n      color: #368CCB;\n      text-decoration: none;\n    }\n  }\n\n  .post-content {\n    a {\n      color: #368CCB;\n      text-decoration: none;\n    }\n  }\n\n  .post-meta {\n    color: #BABABA;\n  }\n}\n```\n`style.styl:`\n```css\nbody {\n  background-color: #F2F2F2;\n  font-size: 1.25rem;\n  line-height: 1.5;\n}\n\n.container {\n  max-width: 960px;\n  margin: 0 auto;\n}\n\n@import \"_partial/header\";\n@import \"_partial/post\";\n```\n最后，我们需要把样式添加到页面中，这里使用了另外一个辅助函数 `css():`\n`layout/_partial/head.ejs:`\n```js\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" name=\"viewport\">\n  <title><%= config.title %></title>\n  <%- css('css/style.css') %>\n</head>\n```\n至此，我们会看到站点的首页是这个样子的：\n\n![](http://ww3.sinaimg.cn/large/006tNc79gw1fasg7y42bqj314h0i6jv1.jpg)\n\n## 添加分页\n在站点的 `source/_post/` 目录下存放的是我们的文章，现在我们把原本的 `hello-world.md` 复制黏贴 `10+` 次，再查看站点首页。会发现，首页只显示了 `10` 篇文章。\n首页显示的文章数量我们可以通过站点配置文件中的 `per_page` 字段来修改，但是我们不可能把所有文章都放在一页，所以我们现在来添加文章列表的分页。\n新建 `_partial/paginator.ejs:`\n```js\n<% if (page.total > 1){ %>\n  <nav class=\"page-nav\">\n    <%- paginator({\n      prev_text: \"&laquo; Prev\",\n      next_text: \"Next &raquo;\"\n    }) %>\n  </nav>\n<% } %>\n```\n在 `index.ejs` 中添加这个文件的内容：\n```js\n...\n</section>\n<%- paginator('_partial/paginator') %>\n```\n这里我们使用到了另外的一个辅助函数 `paginator`，它能够帮助我们插入分页链接。\n添加文章详情页\n文章详情页对应的布局文件是 `post.ejs`，新建 `post.ejs:`\n```js\n<article class=\"post\">\n  <div class=\"post-title\">\n    <h2 class=\"title\"><%= page.title %></h2>\n  </div>\n   <div class=\"post-meta\">\n    <span class=\"post-time\"><%- date(page.date, \"YYYY-MM-DD\") %></span>\n  </div>\n  <div class=\"post-content\">\n    <%- page.content %>\n  </div>\n</article>\n```\n由于这里是文章的模板，所以变量 `page` 表示的是文章的数据，而不是首页的文章数据集合。\n## 添加归档页\n创建归档页使用的模板文件 `archive.ejs:`\n```js\n<section class=\"archive\">\n  <ul class=\"post-archive\">\n    <% page.posts.each(function (post) { %>\n      <li class=\"post-item\">\n        <span class=\"post-date\"><%= date(post.date, \"YYYY-MM-DD\") %></span>\n        <a class=\"post-title\" href=\"<%- url_for(post.path) %>\"><%= post.title %></a>\n      </li>\n    <% }) %>\n  </ul>\n</section>\n<%- partial('_partial/paginator') %>\n```\n其实结构跟首页差不多，只是不显示文章内容而已。添加归档页的样式：\n`css/_partial/archive.styl:`\n```css\n.archive {\n  margin: 1em auto;\n  padding: 30px 50px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  box-shadow: 0 0 2px #ddd;\n\n  .post-archive {\n    list-style: none;\n    padding: 0;\n\n    .post-item {\n      margin: 5px 0;\n\n      .post-date {\n        display: inline-block;\n        margin-right: 10px;\n        color: #BABABA;\n      }\n\n      .post-title {\n        color: #368CCB;\n        text-decoration: none;\n      }\n    }\n  }\n}\n```\n## 国际化\n还记得我们一开始创建的 `languages` 文件夹吗？没错，它是用来添加多种语言，用于 `i18n` 的。站点的语言设置为站点配置文件中的 `language`。\n当该字段为空时，默认使用的是 `languages/default.yml` 这个文件。那么现在我们来添加这个文件，我们决定主题的默认语言是英文：\n```yml\nMenu:\n  Home: Home\n  Archives: Archives\n  Github: Github\n\nPaginator:\n  Prev: Prev\n  Next: Next\n```\n目前我们需要主题根据选择的语言自动修改的有上面这些，接着我们需要修改 `header.ejs` 与 `paginator.ejs` 这两个文件：\n`_partial/header.ejs`\n```js\n<header class=\"header\">\n  <div class=\"blog-title\">\n    <a href=\"<%- url_for() %>\" class=\"logo\"><%= config.title %></a>\n  </div>\n  <nav class=\"navbar\">\n    <ul class=\"menu\">\n      <% for (name in theme.menu) { %>\n        <li class=\"menu-item\">\n          <a href=\"<%- url_for(theme.menu[name]) %>\" class=\"menu-item-link\"><%- __('Menu.' + name) %></a>\n        </li>\n      <% } %>\n    </ul>\n  </nav>\n</header>\n```\n`_partial/paginator.ejs:`\n```js\n<% if (page.total > 1){ %>\n  <nav class=\"page-nav\">\n    <%- paginator({\n      prev_text: \"&laquo;\" + __('Paginator.Prev'),\n      next_text: __('Paginator.Next') + \"&raquo;\"\n    }) %>\n  </nav>\n<% } %>\n```\n修改之后其实与之前相比没有什么变化，起码看起来是。现在我们添加一个中文的文件：\n`languages/zh-CN.yml`\n```yml\nMenu:\n  Home: 首页\n  Archives: 归档\n  Github: 交友\n\nPaginator:\n  Prev: 上一页\n  Next: 下一页\n```\n然后我们将站点配置文件中的 `language` 字段修改为 `zh-CN`（与 `zh-CN.yml` 文件名相同）。再次访问站点之后就会发现导航与分页部分的文字变成了中文。\n## hexo函数\n```js\n<%- __('Menu.' + name) %>\n```\n__下划线函数在 `hexo` 变量 可以查看 `Lodash` 函数，专门用于`json`取值\n最后总结\n如果你有耐心看我废话了这么多的话，恭喜你，你应该对怎么去写一个 `Hexo` 主题有了一定的了解。其实说白了，`Hexo` 就是把那些 `Markdown` 文件按照不同的布局模板，填上对应的数据生成 `HTML` 页面，复制 `source` 中的到生成的 `public` 文件夹中，中间过程会把需要编译的 `stylus/less/sass` 等文件编译。\n本文并没有提及有关页面 `JavaScript` 的部分，实际上与写 `CSS` 样式相同。在 `source/js` 中写 `JavaScript` 脚本，然后在模板中引入即可。\n感谢阅读，希望对你有所帮助。","source":"_posts/[Hexo] 002 从 0 开始制作 Hexo 博客主题.md","raw":"---\ntitle: '从 0 开始制作 Hexo 博客主题'\ndate: 2020-10-26 20:01:32\nlink_c: Hexo\nlink_name: Theme-Made-By-Myself\ntop: 2002\nmathjax: true\n---\n\n## 写在前面\n本文将会从零开始开发一个简单的博客主题。样式主要参考 `Hexo theme` 中的 `Noise` 主题。\n\n<!-- More -->\n\n开始之前你需要了解：\n- 模板引擎 ejs官网\n- CSS预处理器\n- Hexo 文档\n\n本文使用的模板引擎为 `ejs`，使用的 CSS 预处理器为 `stylus`。这也是 `hexo` 项目预装了的 `render` 插件，如果想使用其他模板引擎或者其他 `CSS` 预处理器，可以安装相对应的 `render` 插件。例如我的 `Even` 主题使用的是 `Swig` 与 `SCSS`。\n目录结构\n主题目录结构以自带的 `landscape` 主题为例：\n.\n├── languages  语言文件，用于国际化\n├── layout     页面模板文件\n├── scripts    Hexo 脚本\n└── source     主题资源文件，包括页面样式，脚本，字体等\n我们在 themes 中新建 `theme-example` 文件夹，然后在 `theme-demo` 中按照 `landscape` 主题的目录结构新建 `languages`，`layout`，`scripts` 与 source 文件夹。\n## 创建布局模板\n在 `layout` 中创建 `index.ejs` 文件，首页将会使用该布局模板生成 HTML 文件。\n`layout/index.ejs:`\n```js\n<html>\n  <head>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n    <meta content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" name=\"viewport\">\n    <title>Home</title>\n  </head>\n  <body>\n    <h1>Hello Word</h1>\n  </body>\n</html>\n```\n修改站点配置文件中的主题配置，使用我们刚刚创建的 `theme-example` 主题：\n```yml\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: theme-example\n```\n## 运行\n`hexo clean`   清除`public`静态文件\n`hexo generate` 生成`public`静态文件\n`hexo server --debug` 以 `debug` 模式开启 `Hexo` 本地服务器预览，访问 http://localhost:4000/。\n\n![](http://ww2.sinaimg.cn/large/006tNc79gw1farp8irho3j30dq058t8s.jpg)\n \n## 写作\n在工作文件夹中执行这条命令来新建一篇文章，`title`即为文章的标题。\n```\nhexo new <title>　　\n```\n终端会返回一条信息，告诉你文章源文件存放在哪里：\n\n![](https://img2018.cnblogs.com/blog/826333/201906/826333-20190604095056843-1809346942.png)\n \n## 添加页面导航\n现在我们需要在页面中添加导航，由于导航不单单会在首页出现，所以我们在 `layout` 中创建共用的布局文件 `layout.ejs`， 同时创建 `_partial/head.ejs` 保存 HTML 的 `head` 以及创建 `_partial/header.ejs` 文件，编写页面导航部分。\n`layout/layout.ejs:`\n```js\n<!DOCTYPE html>\n<html>\n  <%- partial('_partial/head') %>\n  <body>\n    <%- partial('_partial/header') %>\n    <main class=\"main\">\n      <%- body %>\n    </main>\n  </body>\n</html>\n```\n`layout.ejs` 文件通过 `partial()` 函数来包含其他文件，使得我们能够更好的组织代码。详见 `Templates | Hexo`。\n`layout/_partial/head.ejs:`\n```js\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" name=\"viewport\">\n  <title><%= config.title %></title>\n</head>\n```\n这里使用了 `config` 变量，该变量包含的是站点配置（即站点根目录下 `_config.yml` 中的配置）。除此之外，`Hexo` 还提供了许多变量可在模板中使用，详见 `Variables | Hexo`。\n`layout/_partial/header.ejs:`\n```js\n<header class=\"header\">\n  <div class=\"blog-title\">\n    <a href=\"<%- url_for() %>\" class=\"logo\"><%= config.title %></a>\n  </div>\n  <nav class=\"navbar\">\n    <ul class=\"menu\">\n      <li class=\"menu-item\">\n        <a href=\"/\" class=\"menu-item-link\">Home</a>\n      </li>\n      <li class=\"menu-item\">\n        <a href=\"/archives\" class=\"menu-item-link\">Archive</a>\n      </li>\n    </ul>\n  </nav>\n</header>\n```\n接着我们清空 `index.ejs` 中的内容，并添加 `<h2>Hello World</h2>`。在 `layout` 目录下的 `index.ejs` 会自动继承 `layout.ejs`，并将其中的内容填入 `<%- body %>` 的位置。我们将得到一个有导航菜单的 `Hello World` 页面。\n\n![](http://ww3.sinaimg.cn/large/006tNc79gw1farv6wgpe1j308t05tjrk.jpg)\n\n## 添加主题配置文件\n实际上我们需要让导航菜单根据我们的需要显示不同的项，上面这种写法不方便修改。所以我们会在主题的配置文件中添加导航菜单的配置。在 `thmem-demo` 下新建主题的配置文件 `_config.yml`，在其中添加需要配置的字段。然后可以通过`theme`这个变量来拿到该配置文件中的配置。\n`theme-demo/_config.yml:`\n```yml\nmenu:\n  Home: /\n  Archives: /archives\n```\n这样我们就可以在 `header.ejs` 中使用 `theme.menu` 获取到导航菜单的设置。将 `header.ejs` 修改为：\n```js\n<header class=\"header\">\n  <div class=\"blog-title\">\n    <a href=\"<%- url_for() %>\" class=\"logo\"><%= config.title %></a>\n  </div>\n  <nav class=\"navbar\">\n    <ul class=\"menu\">\n      <% for (name in theme.menu) { %>\n        <li class=\"menu-item\">\n          <a href=\"<%- url_for(theme.menu[name]) %>\" class=\"menu-item-link\"><%= name %></a>\n        </li>\n      <% } %>\n    </ul>\n  </nav>\n</header>\n```\n当需要在导航中添加链接的时候就可以在配置文件中直接添加，例如添加 `Github` 的链接：\n```yml\nmenu:\n  Home: /\n  Archives: /archives\n  Github: https://github.com/ahonn\n```\n除此之外还可以添加其他需要的配置，例如 `RSS`，评论等等。\n## 添加首页文章列表\n接着我们完善首页的模板，使其能够显示文章列表。前面已经说过 `Hexo` 提供了各种有用的变量，在这里将会使用到 `page` 这个变量。`page` 会根据不同的页面拥有不同的属性。具体有什么属性，可以获取到哪些数据可以查看[这里](https://hexo.io/docs/variables.html#Page-Variables)。\n那么这里我们会使用 `page` 变量的 `posts` 属性拿到文章数据的集合。编辑 `index.ejs` 文件：\n```js\n<section class=\"posts\">\n  <% page.posts.each(function (post) { %>\n    <article class=\"post\">\n      <div class=\"post-title\">\n        <a class=\"post-title-link\" href=\"<%- url_for(post.path) %>\"><%= post.title %></a>\n      </div>\n      <div class=\"post-content\">\n        <%- post.content %>\n      </div>\n      <div class=\"post-meta\">\n        <span class=\"post-time\"><%- date(post.date, \"YYYY-MM-DD\") %></span>\n      </div>\n    </article>\n  <% }) %>\n</section>\n```\n从 `page.posts` 中获取单篇文章的数据，并获取文章的标题，内容等数据填充到模板中。处理文章创建时间的时候使用了 `date()` 函数，这是 `Hexo` 提供的时间处理的辅助函数。本文中使用到的函数如无特别说明，即为 `Hexo` 的辅助函数。\n## 文章摘录\n由于首页显示文章内容时使用的是 `post.content`，即文章的全部内容。所以首页会显示每一篇文章的内容，实际上我们并不想在首页显示那么多内容，只想显示文章的摘录。\n`Hexo` 提供了 `excerpt` 属性来获取文章的摘录部分，不过这里需要在文章中添加一个 `<!-- more -->` 标记。添加了这个标记之后，`post.excerpt` 将会获取到标记之前的内容。如果没有这个标记，那么 `post.excerpt` 会是空的。所以我们可以把首页文章内容部分的 `post.content` 替换成 `post.excerpt`。\n```js\n<div class=\"post-content\">\n  <%- post.excerpt %>\n</div>\n```\n## 添加页面样式\n到目前为止，我们完成了首页的页面结构，但是并没有添加样式，所以看起来很丑。我们在 `source` 文件中创建一个 `css` 文件夹来存放样式文件。\n由于 `Hexo` 在新建项目的时候会安装 `hexo-renderer-stylus` 这个插件，所以我们无需其他步骤，只需要将样式文件放到 `css` 文件夹中。`Hexo` 在生成页面的时候会将 `source` 中的所有文件复制到生成的 `public` 文件中，并且在此之前会编译 `styl` 为 `css` 文件。\n在 `css` 文件夹中创建 `style.styl`，编写一些基础的样式，并把所有样式 `import` 到这个文件。所以最终编译之后只会有 `style.css` 一个文件。创建 `_partial/header.styl` 与 `_partial/post.style` 存放页面导航以及文章的样式，并且在 `style.styl` 中 `import` 这两个文件。\n`_partial/header.styl:`\n```css\n.header {\n  margin-top: 2em\n  display: flex\n  align-items: baseline\n  justify-content: space-between\n\n  .blog-title .logo {\n    color: #AAA;\n    font-size: 2em;\n    font-family: \"Comic Sans MS\",cursive,LiSu,sans-serif;\n    text-decoration: none;\n  }\n\n  .menu {\n    margin: 0;\n    padding: 0;\n\n    .menu-item {\n      display: inline-block;\n      margin-right: 10px;\n    }\n\n    .menu-item-link {\n      color: #AAA;\n      text-decoration: none;\n\n      &:hover {\n        color: #368CCB;\n      }\n    }\n  }\n}\n```\n`_partial/post.styl:`\n```css\n.post {\n  margin: 1em auto;\n  padding: 30px 50px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  box-shadow: 0 0 2px #ddd;\n}\n\n.posts  {\n  .post:first-child {\n    margin-top: 0;\n  }\n\n  .post-title {\n    font-size: 1.5em;\n\n    .post-title-link {\n      color: #368CCB;\n      text-decoration: none;\n    }\n  }\n\n  .post-content {\n    a {\n      color: #368CCB;\n      text-decoration: none;\n    }\n  }\n\n  .post-meta {\n    color: #BABABA;\n  }\n}\n```\n`style.styl:`\n```css\nbody {\n  background-color: #F2F2F2;\n  font-size: 1.25rem;\n  line-height: 1.5;\n}\n\n.container {\n  max-width: 960px;\n  margin: 0 auto;\n}\n\n@import \"_partial/header\";\n@import \"_partial/post\";\n```\n最后，我们需要把样式添加到页面中，这里使用了另外一个辅助函数 `css():`\n`layout/_partial/head.ejs:`\n```js\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" name=\"viewport\">\n  <title><%= config.title %></title>\n  <%- css('css/style.css') %>\n</head>\n```\n至此，我们会看到站点的首页是这个样子的：\n\n![](http://ww3.sinaimg.cn/large/006tNc79gw1fasg7y42bqj314h0i6jv1.jpg)\n\n## 添加分页\n在站点的 `source/_post/` 目录下存放的是我们的文章，现在我们把原本的 `hello-world.md` 复制黏贴 `10+` 次，再查看站点首页。会发现，首页只显示了 `10` 篇文章。\n首页显示的文章数量我们可以通过站点配置文件中的 `per_page` 字段来修改，但是我们不可能把所有文章都放在一页，所以我们现在来添加文章列表的分页。\n新建 `_partial/paginator.ejs:`\n```js\n<% if (page.total > 1){ %>\n  <nav class=\"page-nav\">\n    <%- paginator({\n      prev_text: \"&laquo; Prev\",\n      next_text: \"Next &raquo;\"\n    }) %>\n  </nav>\n<% } %>\n```\n在 `index.ejs` 中添加这个文件的内容：\n```js\n...\n</section>\n<%- paginator('_partial/paginator') %>\n```\n这里我们使用到了另外的一个辅助函数 `paginator`，它能够帮助我们插入分页链接。\n添加文章详情页\n文章详情页对应的布局文件是 `post.ejs`，新建 `post.ejs:`\n```js\n<article class=\"post\">\n  <div class=\"post-title\">\n    <h2 class=\"title\"><%= page.title %></h2>\n  </div>\n   <div class=\"post-meta\">\n    <span class=\"post-time\"><%- date(page.date, \"YYYY-MM-DD\") %></span>\n  </div>\n  <div class=\"post-content\">\n    <%- page.content %>\n  </div>\n</article>\n```\n由于这里是文章的模板，所以变量 `page` 表示的是文章的数据，而不是首页的文章数据集合。\n## 添加归档页\n创建归档页使用的模板文件 `archive.ejs:`\n```js\n<section class=\"archive\">\n  <ul class=\"post-archive\">\n    <% page.posts.each(function (post) { %>\n      <li class=\"post-item\">\n        <span class=\"post-date\"><%= date(post.date, \"YYYY-MM-DD\") %></span>\n        <a class=\"post-title\" href=\"<%- url_for(post.path) %>\"><%= post.title %></a>\n      </li>\n    <% }) %>\n  </ul>\n</section>\n<%- partial('_partial/paginator') %>\n```\n其实结构跟首页差不多，只是不显示文章内容而已。添加归档页的样式：\n`css/_partial/archive.styl:`\n```css\n.archive {\n  margin: 1em auto;\n  padding: 30px 50px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  box-shadow: 0 0 2px #ddd;\n\n  .post-archive {\n    list-style: none;\n    padding: 0;\n\n    .post-item {\n      margin: 5px 0;\n\n      .post-date {\n        display: inline-block;\n        margin-right: 10px;\n        color: #BABABA;\n      }\n\n      .post-title {\n        color: #368CCB;\n        text-decoration: none;\n      }\n    }\n  }\n}\n```\n## 国际化\n还记得我们一开始创建的 `languages` 文件夹吗？没错，它是用来添加多种语言，用于 `i18n` 的。站点的语言设置为站点配置文件中的 `language`。\n当该字段为空时，默认使用的是 `languages/default.yml` 这个文件。那么现在我们来添加这个文件，我们决定主题的默认语言是英文：\n```yml\nMenu:\n  Home: Home\n  Archives: Archives\n  Github: Github\n\nPaginator:\n  Prev: Prev\n  Next: Next\n```\n目前我们需要主题根据选择的语言自动修改的有上面这些，接着我们需要修改 `header.ejs` 与 `paginator.ejs` 这两个文件：\n`_partial/header.ejs`\n```js\n<header class=\"header\">\n  <div class=\"blog-title\">\n    <a href=\"<%- url_for() %>\" class=\"logo\"><%= config.title %></a>\n  </div>\n  <nav class=\"navbar\">\n    <ul class=\"menu\">\n      <% for (name in theme.menu) { %>\n        <li class=\"menu-item\">\n          <a href=\"<%- url_for(theme.menu[name]) %>\" class=\"menu-item-link\"><%- __('Menu.' + name) %></a>\n        </li>\n      <% } %>\n    </ul>\n  </nav>\n</header>\n```\n`_partial/paginator.ejs:`\n```js\n<% if (page.total > 1){ %>\n  <nav class=\"page-nav\">\n    <%- paginator({\n      prev_text: \"&laquo;\" + __('Paginator.Prev'),\n      next_text: __('Paginator.Next') + \"&raquo;\"\n    }) %>\n  </nav>\n<% } %>\n```\n修改之后其实与之前相比没有什么变化，起码看起来是。现在我们添加一个中文的文件：\n`languages/zh-CN.yml`\n```yml\nMenu:\n  Home: 首页\n  Archives: 归档\n  Github: 交友\n\nPaginator:\n  Prev: 上一页\n  Next: 下一页\n```\n然后我们将站点配置文件中的 `language` 字段修改为 `zh-CN`（与 `zh-CN.yml` 文件名相同）。再次访问站点之后就会发现导航与分页部分的文字变成了中文。\n## hexo函数\n```js\n<%- __('Menu.' + name) %>\n```\n__下划线函数在 `hexo` 变量 可以查看 `Lodash` 函数，专门用于`json`取值\n最后总结\n如果你有耐心看我废话了这么多的话，恭喜你，你应该对怎么去写一个 `Hexo` 主题有了一定的了解。其实说白了，`Hexo` 就是把那些 `Markdown` 文件按照不同的布局模板，填上对应的数据生成 `HTML` 页面，复制 `source` 中的到生成的 `public` 文件夹中，中间过程会把需要编译的 `stylus/less/sass` 等文件编译。\n本文并没有提及有关页面 `JavaScript` 的部分，实际上与写 `CSS` 样式相同。在 `source/js` 中写 `JavaScript` 脚本，然后在模板中引入即可。\n感谢阅读，希望对你有所帮助。","slug":"[Hexo] 002 从 0 开始制作 Hexo 博客主题","published":1,"updated":"2020-12-29T11:03:56.028Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj9vyar70001r8b19777cw6a","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>本文将会从零开始开发一个简单的博客主题。样式主要参考 <code>Hexo theme</code> 中的 <code>Noise</code> 主题。</p>\n<a id=\"more\"></a>\n\n<p>开始之前你需要了解：</p>\n<ul>\n<li>模板引擎 ejs官网</li>\n<li>CSS预处理器</li>\n<li>Hexo 文档</li>\n</ul>\n<p>本文使用的模板引擎为 <code>ejs</code>，使用的 CSS 预处理器为 <code>stylus</code>。这也是 <code>hexo</code> 项目预装了的 <code>render</code> 插件，如果想使用其他模板引擎或者其他 <code>CSS</code> 预处理器，可以安装相对应的 <code>render</code> 插件。例如我的 <code>Even</code> 主题使用的是 <code>Swig</code> 与 <code>SCSS</code>。<br>目录结构<br>主题目录结构以自带的 <code>landscape</code> 主题为例：<br>.<br>├── languages  语言文件，用于国际化<br>├── layout     页面模板文件<br>├── scripts    Hexo 脚本<br>└── source     主题资源文件，包括页面样式，脚本，字体等<br>我们在 themes 中新建 <code>theme-example</code> 文件夹，然后在 <code>theme-demo</code> 中按照 <code>landscape</code> 主题的目录结构新建 <code>languages</code>，<code>layout</code>，<code>scripts</code> 与 source 文件夹。</p>\n<h2 id=\"创建布局模板\"><a href=\"#创建布局模板\" class=\"headerlink\" title=\"创建布局模板\"></a>创建布局模板</h2><p>在 <code>layout</code> 中创建 <code>index.ejs</code> 文件，首页将会使用该布局模板生成 HTML 文件。<br><code>layout/index.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;html&gt;<br>  &lt;head&gt;<br>    &lt;meta http-equiv=<span class=\"hljs-string\">&quot;content-type&quot;</span> content=<span class=\"hljs-string\">&quot;text/html; charset=utf-8&quot;</span>&gt;<br>    &lt;meta content=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;</span> name=<span class=\"hljs-string\">&quot;viewport&quot;</span>&gt;<br>    &lt;title&gt;Home&lt;/title&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;h1&gt;Hello Word&lt;/h1&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure>\n<p>修改站点配置文件中的主题配置，使用我们刚刚创建的 <code>theme-example</code> 主题：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-comment\"># Extensions</span><br><span class=\"hljs-comment\">## Plugins: https://hexo.io/plugins/</span><br><span class=\"hljs-comment\">## Themes: https://hexo.io/themes/</span><br><span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">theme-example</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p><code>hexo clean</code>   清除<code>public</code>静态文件<br><code>hexo generate</code> 生成<code>public</code>静态文件<br><code>hexo server --debug</code> 以 <code>debug</code> 模式开启 <code>Hexo</code> 本地服务器预览，访问 <a href=\"http://localhost:4000/%E3%80%82\">http://localhost:4000/。</a></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/006tNc79gw1farp8irho3j30dq058t8s.jpg\"></p>\n<h2 id=\"写作\"><a href=\"#写作\" class=\"headerlink\" title=\"写作\"></a>写作</h2><p>在工作文件夹中执行这条命令来新建一篇文章，<code>title</code>即为文章的标题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">hexo new &lt;title&gt;　　<br></code></pre></td></tr></table></figure>\n<p>终端会返回一条信息，告诉你文章源文件存放在哪里：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/826333/201906/826333-20190604095056843-1809346942.png\"></p>\n<h2 id=\"添加页面导航\"><a href=\"#添加页面导航\" class=\"headerlink\" title=\"添加页面导航\"></a>添加页面导航</h2><p>现在我们需要在页面中添加导航，由于导航不单单会在首页出现，所以我们在 <code>layout</code> 中创建共用的布局文件 <code>layout.ejs</code>， 同时创建 <code>_partial/head.ejs</code> 保存 HTML 的 <code>head</code> 以及创建 <code>_partial/header.ejs</code> 文件，编写页面导航部分。<br><code>layout/layout.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>  &lt;%- partial(<span class=\"hljs-string\">&#x27;_partial/head&#x27;</span>) %&gt;<br>  &lt;body&gt;<br>    &lt;%- partial(<span class=\"hljs-string\">&#x27;_partial/header&#x27;</span>) %&gt;<br>    &lt;main <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;main&quot;</span>&gt;<br>      &lt;%- body %&gt;<br>    &lt;/main&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure>\n<p><code>layout.ejs</code> 文件通过 <code>partial()</code> 函数来包含其他文件，使得我们能够更好的组织代码。详见 <code>Templates | Hexo</code>。<br><code>layout/_partial/head.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;head&gt;<br>  &lt;meta http-equiv=<span class=\"hljs-string\">&quot;content-type&quot;</span> content=<span class=\"hljs-string\">&quot;text/html; charset=utf-8&quot;</span>&gt;<br>  &lt;meta content=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;</span> name=<span class=\"hljs-string\">&quot;viewport&quot;</span>&gt;<br>  &lt;title&gt;&lt;%= config.title %&gt;&lt;/title&gt;<br>&lt;/head&gt;<br></code></pre></td></tr></table></figure>\n<p>这里使用了 <code>config</code> 变量，该变量包含的是站点配置（即站点根目录下 <code>_config.yml</code> 中的配置）。除此之外，<code>Hexo</code> 还提供了许多变量可在模板中使用，详见 <code>Variables | Hexo</code>。<br><code>layout/_partial/header.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;header <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;header&quot;</span>&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;blog-title&quot;</span>&gt;<br>    &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for() %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;logo&quot;</span>&gt;&lt;%= config.title %&gt;&lt;/a&gt;<br>  &lt;/div&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;navbar&quot;</span>&gt;<br>    &lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu&quot;</span>&gt;<br>      &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item&quot;</span>&gt;<br>        &lt;a href=<span class=\"hljs-string\">&quot;/&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item-link&quot;</span>&gt;Home&lt;/a&gt;<br>      &lt;/li&gt;<br>      &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item&quot;</span>&gt;<br>        &lt;a href=<span class=\"hljs-string\">&quot;/archives&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item-link&quot;</span>&gt;Archive&lt;/a&gt;<br>      &lt;/li&gt;<br>    &lt;/ul&gt;<br>  &lt;/nav&gt;<br>&lt;/header&gt;<br></code></pre></td></tr></table></figure>\n<p>接着我们清空 <code>index.ejs</code> 中的内容，并添加 <code>&lt;h2&gt;Hello World&lt;/h2&gt;</code>。在 <code>layout</code> 目录下的 <code>index.ejs</code> 会自动继承 <code>layout.ejs</code>，并将其中的内容填入 <code>&lt;%- body %&gt;</code> 的位置。我们将得到一个有导航菜单的 <code>Hello World</code> 页面。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/006tNc79gw1farv6wgpe1j308t05tjrk.jpg\"></p>\n<h2 id=\"添加主题配置文件\"><a href=\"#添加主题配置文件\" class=\"headerlink\" title=\"添加主题配置文件\"></a>添加主题配置文件</h2><p>实际上我们需要让导航菜单根据我们的需要显示不同的项，上面这种写法不方便修改。所以我们会在主题的配置文件中添加导航菜单的配置。在 <code>thmem-demo</code> 下新建主题的配置文件 <code>_config.yml</code>，在其中添加需要配置的字段。然后可以通过<code>theme</code>这个变量来拿到该配置文件中的配置。<br><code>theme-demo/_config.yml:</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">menu:</span><br>  <span class=\"hljs-attr\">Home:</span> <span class=\"hljs-string\">/</span><br>  <span class=\"hljs-attr\">Archives:</span> <span class=\"hljs-string\">/archives</span><br></code></pre></td></tr></table></figure>\n<p>这样我们就可以在 <code>header.ejs</code> 中使用 <code>theme.menu</code> 获取到导航菜单的设置。将 <code>header.ejs</code> 修改为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;header <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;header&quot;</span>&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;blog-title&quot;</span>&gt;<br>    &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for() %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;logo&quot;</span>&gt;&lt;%= config.title %&gt;&lt;/a&gt;<br>  &lt;/div&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;navbar&quot;</span>&gt;<br>    &lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu&quot;</span>&gt;<br>      &lt;% <span class=\"hljs-keyword\">for</span> (name <span class=\"hljs-keyword\">in</span> theme.menu) &#123; %&gt;<br>        &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item&quot;</span>&gt;<br>          &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for(theme.menu[name]) %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item-link&quot;</span>&gt;&lt;%= name %&gt;&lt;/a&gt;<br>        &lt;/li&gt;<br>      &lt;% &#125; %&gt;<br>    &lt;/ul&gt;<br>  &lt;/nav&gt;<br>&lt;/header&gt;<br></code></pre></td></tr></table></figure>\n<p>当需要在导航中添加链接的时候就可以在配置文件中直接添加，例如添加 <code>Github</code> 的链接：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">menu:</span><br>  <span class=\"hljs-attr\">Home:</span> <span class=\"hljs-string\">/</span><br>  <span class=\"hljs-attr\">Archives:</span> <span class=\"hljs-string\">/archives</span><br>  <span class=\"hljs-attr\">Github:</span> <span class=\"hljs-string\">https://github.com/ahonn</span><br></code></pre></td></tr></table></figure>\n<p>除此之外还可以添加其他需要的配置，例如 <code>RSS</code>，评论等等。</p>\n<h2 id=\"添加首页文章列表\"><a href=\"#添加首页文章列表\" class=\"headerlink\" title=\"添加首页文章列表\"></a>添加首页文章列表</h2><p>接着我们完善首页的模板，使其能够显示文章列表。前面已经说过 <code>Hexo</code> 提供了各种有用的变量，在这里将会使用到 <code>page</code> 这个变量。<code>page</code> 会根据不同的页面拥有不同的属性。具体有什么属性，可以获取到哪些数据可以查看<a href=\"https://hexo.io/docs/variables.html#Page-Variables\">这里</a>。<br>那么这里我们会使用 <code>page</code> 变量的 <code>posts</code> 属性拿到文章数据的集合。编辑 <code>index.ejs</code> 文件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;section <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;posts&quot;</span>&gt;<br>  &lt;% page.posts.each(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">post</span>) </span>&#123; %&gt;<br>    &lt;article <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post&quot;</span>&gt;<br>      &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-title&quot;</span>&gt;<br>        &lt;a <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-title-link&quot;</span> href=<span class=\"hljs-string\">&quot;&lt;%- url_for(post.path) %&gt;&quot;</span>&gt;&lt;%= post.title %&gt;&lt;/a&gt;<br>      &lt;/div&gt;<br>      &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-content&quot;</span>&gt;<br>        &lt;%- post.content %&gt;<br>      &lt;/div&gt;<br>      &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-meta&quot;</span>&gt;<br>        &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-time&quot;</span>&gt;&lt;%- date(post.date, <span class=\"hljs-string\">&quot;YYYY-MM-DD&quot;</span>) %&gt;&lt;/span&gt;<br>      &lt;/div&gt;<br>    &lt;/article&gt;<br>  &lt;% &#125;) %&gt;<br>&lt;/section&gt;<br></code></pre></td></tr></table></figure>\n<p>从 <code>page.posts</code> 中获取单篇文章的数据，并获取文章的标题，内容等数据填充到模板中。处理文章创建时间的时候使用了 <code>date()</code> 函数，这是 <code>Hexo</code> 提供的时间处理的辅助函数。本文中使用到的函数如无特别说明，即为 <code>Hexo</code> 的辅助函数。</p>\n<h2 id=\"文章摘录\"><a href=\"#文章摘录\" class=\"headerlink\" title=\"文章摘录\"></a>文章摘录</h2><p>由于首页显示文章内容时使用的是 <code>post.content</code>，即文章的全部内容。所以首页会显示每一篇文章的内容，实际上我们并不想在首页显示那么多内容，只想显示文章的摘录。<br><code>Hexo</code> 提供了 <code>excerpt</code> 属性来获取文章的摘录部分，不过这里需要在文章中添加一个 <code>&lt;!-- more --&gt;</code> 标记。添加了这个标记之后，<code>post.excerpt</code> 将会获取到标记之前的内容。如果没有这个标记，那么 <code>post.excerpt</code> 会是空的。所以我们可以把首页文章内容部分的 <code>post.content</code> 替换成 <code>post.excerpt</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-content&quot;</span>&gt;<br>  &lt;%- post.excerpt %&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure>\n<h2 id=\"添加页面样式\"><a href=\"#添加页面样式\" class=\"headerlink\" title=\"添加页面样式\"></a>添加页面样式</h2><p>到目前为止，我们完成了首页的页面结构，但是并没有添加样式，所以看起来很丑。我们在 <code>source</code> 文件中创建一个 <code>css</code> 文件夹来存放样式文件。<br>由于 <code>Hexo</code> 在新建项目的时候会安装 <code>hexo-renderer-stylus</code> 这个插件，所以我们无需其他步骤，只需要将样式文件放到 <code>css</code> 文件夹中。<code>Hexo</code> 在生成页面的时候会将 <code>source</code> 中的所有文件复制到生成的 <code>public</code> 文件中，并且在此之前会编译 <code>styl</code> 为 <code>css</code> 文件。<br>在 <code>css</code> 文件夹中创建 <code>style.styl</code>，编写一些基础的样式，并把所有样式 <code>import</code> 到这个文件。所以最终编译之后只会有 <code>style.css</code> 一个文件。创建 <code>_partial/header.styl</code> 与 <code>_partial/post.style</code> 存放页面导航以及文章的样式，并且在 <code>style.styl</code> 中 <code>import</code> 这两个文件。<br><code>_partial/header.styl:</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.header</span> &#123;<br>  <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">2em</span><br>  display: flex<br>  align-items: baseline<br>  justify-content: space-between<br><br>  .blog-title .logo &#123;<br>    color: <span class=\"hljs-number\">#AAA</span>;<br>    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2em</span>;<br>    <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&quot;Comic Sans MS&quot;</span>,cursive,LiSu,sans-serif;<br>    <span class=\"hljs-attribute\">text-decoration</span>: none;<br>  &#125;<br><br>  <span class=\"hljs-selector-class\">.menu</span> &#123;<br>    <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0</span>;<br><br>    .menu-item &#123;<br>      <span class=\"hljs-selector-tag\">display</span>: <span class=\"hljs-selector-tag\">inline-block</span>;<br>      <span class=\"hljs-selector-tag\">margin-right</span>: 10<span class=\"hljs-selector-tag\">px</span>;<br>    &#125;<br><br>    <span class=\"hljs-selector-class\">.menu-item-link</span> &#123;<br>      <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#AAA</span>;<br>      <span class=\"hljs-attribute\">text-decoration</span>: none;<br><br>      &amp;:hover &#123;<br>        <span class=\"hljs-selector-tag\">color</span>: <span class=\"hljs-selector-id\">#368CCB</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>_partial/post.styl:</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.post</span> &#123;<br>  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">1em</span> auto;<br>  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">30px</span> <span class=\"hljs-number\">50px</span>;<br>  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#fff</span>;<br>  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ddd</span>;<br>  <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">2px</span> <span class=\"hljs-number\">#ddd</span>;<br>&#125;<br><br><span class=\"hljs-selector-class\">.posts</span>  &#123;<br>  <span class=\"hljs-attribute\">.post</span>:first-child &#123;<br>    margin-top: <span class=\"hljs-number\">0</span>;<br>  &#125;<br><br>  <span class=\"hljs-selector-class\">.post-title</span> &#123;<br>    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.5em</span>;<br><br>    .post-title-link &#123;<br>      <span class=\"hljs-selector-tag\">color</span>: <span class=\"hljs-selector-id\">#368CCB</span>;<br>      <span class=\"hljs-selector-tag\">text-decoration</span>: <span class=\"hljs-selector-tag\">none</span>;<br>    &#125;<br>  &#125;<br><br>  <span class=\"hljs-selector-class\">.post-content</span> &#123;<br>    a &#123;<br>      <span class=\"hljs-selector-tag\">color</span>: <span class=\"hljs-selector-id\">#368CCB</span>;<br>      <span class=\"hljs-selector-tag\">text-decoration</span>: <span class=\"hljs-selector-tag\">none</span>;<br>    &#125;<br>  &#125;<br><br>  <span class=\"hljs-selector-class\">.post-meta</span> &#123;<br>    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#BABABA</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>style.styl:</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">body</span> &#123;<br>  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#F2F2F2</span>;<br>  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.25rem</span>;<br>  <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-number\">1.5</span>;<br>&#125;<br><br><span class=\"hljs-selector-class\">.container</span> &#123;<br>  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">960px</span>;<br>  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> auto;<br>&#125;<br><br><span class=\"hljs-keyword\">@import</span> <span class=\"hljs-string\">&quot;_partial/header&quot;</span>;<br><span class=\"hljs-keyword\">@import</span> <span class=\"hljs-string\">&quot;_partial/post&quot;</span>;<br></code></pre></td></tr></table></figure>\n<p>最后，我们需要把样式添加到页面中，这里使用了另外一个辅助函数 <code>css():</code><br><code>layout/_partial/head.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;head&gt;<br>  &lt;meta http-equiv=<span class=\"hljs-string\">&quot;content-type&quot;</span> content=<span class=\"hljs-string\">&quot;text/html; charset=utf-8&quot;</span>&gt;<br>  &lt;meta content=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;</span> name=<span class=\"hljs-string\">&quot;viewport&quot;</span>&gt;<br>  &lt;title&gt;&lt;%= config.title %&gt;&lt;/title&gt;<br>  &lt;%- css(<span class=\"hljs-string\">&#x27;css/style.css&#x27;</span>) %&gt;<br>&lt;/head&gt;<br></code></pre></td></tr></table></figure>\n<p>至此，我们会看到站点的首页是这个样子的：</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/006tNc79gw1fasg7y42bqj314h0i6jv1.jpg\"></p>\n<h2 id=\"添加分页\"><a href=\"#添加分页\" class=\"headerlink\" title=\"添加分页\"></a>添加分页</h2><p>在站点的 <code>source/_post/</code> 目录下存放的是我们的文章，现在我们把原本的 <code>hello-world.md</code> 复制黏贴 <code>10+</code> 次，再查看站点首页。会发现，首页只显示了 <code>10</code> 篇文章。<br>首页显示的文章数量我们可以通过站点配置文件中的 <code>per_page</code> 字段来修改，但是我们不可能把所有文章都放在一页，所以我们现在来添加文章列表的分页。<br>新建 <code>_partial/paginator.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;% <span class=\"hljs-keyword\">if</span> (page.total &gt; <span class=\"hljs-number\">1</span>)&#123; %&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;page-nav&quot;</span>&gt;<br>    &lt;%- paginator(&#123;<br>      prev_text: <span class=\"hljs-string\">&quot;&amp;laquo; Prev&quot;</span>,<br>      next_text: <span class=\"hljs-string\">&quot;Next &amp;raquo;&quot;</span><br>    &#125;) %&gt;<br>  &lt;/nav&gt;<br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure>\n<p>在 <code>index.ejs</code> 中添加这个文件的内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">...<br>&lt;/section&gt;<br>&lt;%- paginator(<span class=\"hljs-string\">&#x27;_partial/paginator&#x27;</span>) %&gt;<br></code></pre></td></tr></table></figure>\n<p>这里我们使用到了另外的一个辅助函数 <code>paginator</code>，它能够帮助我们插入分页链接。<br>添加文章详情页<br>文章详情页对应的布局文件是 <code>post.ejs</code>，新建 <code>post.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;article <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post&quot;</span>&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-title&quot;</span>&gt;<br>    &lt;h2 <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;title&quot;</span>&gt;&lt;%= page.title %&gt;&lt;/h2&gt;<br>  &lt;/div&gt;<br>   &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-meta&quot;</span>&gt;<br>    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-time&quot;</span>&gt;&lt;%- date(page.date, <span class=\"hljs-string\">&quot;YYYY-MM-DD&quot;</span>) %&gt;&lt;/span&gt;<br>  &lt;/div&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-content&quot;</span>&gt;<br>    &lt;%- page.content %&gt;<br>  &lt;/div&gt;<br>&lt;/article&gt;<br></code></pre></td></tr></table></figure>\n<p>由于这里是文章的模板，所以变量 <code>page</code> 表示的是文章的数据，而不是首页的文章数据集合。</p>\n<h2 id=\"添加归档页\"><a href=\"#添加归档页\" class=\"headerlink\" title=\"添加归档页\"></a>添加归档页</h2><p>创建归档页使用的模板文件 <code>archive.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;section <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;archive&quot;</span>&gt;<br>  &lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-archive&quot;</span>&gt;<br>    &lt;% page.posts.each(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">post</span>) </span>&#123; %&gt;<br>      &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-item&quot;</span>&gt;<br>        &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-date&quot;</span>&gt;&lt;%= date(post.date, <span class=\"hljs-string\">&quot;YYYY-MM-DD&quot;</span>) %&gt;&lt;/span&gt;<br>        &lt;a <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-title&quot;</span> href=<span class=\"hljs-string\">&quot;&lt;%- url_for(post.path) %&gt;&quot;</span>&gt;&lt;%= post.title %&gt;&lt;/a&gt;<br>      &lt;/li&gt;<br>    &lt;% &#125;) %&gt;<br>  &lt;/ul&gt;<br>&lt;/section&gt;<br>&lt;%- partial(<span class=\"hljs-string\">&#x27;_partial/paginator&#x27;</span>) %&gt;<br></code></pre></td></tr></table></figure>\n<p>其实结构跟首页差不多，只是不显示文章内容而已。添加归档页的样式：<br><code>css/_partial/archive.styl:</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.archive</span> &#123;<br>  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">1em</span> auto;<br>  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">30px</span> <span class=\"hljs-number\">50px</span>;<br>  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#fff</span>;<br>  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ddd</span>;<br>  <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">2px</span> <span class=\"hljs-number\">#ddd</span>;<br><br>  .post-archive &#123;<br>    <span class=\"hljs-selector-tag\">list-style</span>: <span class=\"hljs-selector-tag\">none</span>;<br>    <span class=\"hljs-selector-tag\">padding</span>: 0;<br><br>    <span class=\"hljs-selector-class\">.post-item</span> &#123;<br>      <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">5px</span> <span class=\"hljs-number\">0</span>;<br><br>      .post-date &#123;<br>        <span class=\"hljs-selector-tag\">display</span>: <span class=\"hljs-selector-tag\">inline-block</span>;<br>        <span class=\"hljs-selector-tag\">margin-right</span>: 10<span class=\"hljs-selector-tag\">px</span>;<br>        <span class=\"hljs-selector-tag\">color</span>: <span class=\"hljs-selector-id\">#BABABA</span>;<br>      &#125;<br><br>      <span class=\"hljs-selector-class\">.post-title</span> &#123;<br>        <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#368CCB</span>;<br>        <span class=\"hljs-attribute\">text-decoration</span>: none;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"国际化\"><a href=\"#国际化\" class=\"headerlink\" title=\"国际化\"></a>国际化</h2><p>还记得我们一开始创建的 <code>languages</code> 文件夹吗？没错，它是用来添加多种语言，用于 <code>i18n</code> 的。站点的语言设置为站点配置文件中的 <code>language</code>。<br>当该字段为空时，默认使用的是 <code>languages/default.yml</code> 这个文件。那么现在我们来添加这个文件，我们决定主题的默认语言是英文：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">Menu:</span><br>  <span class=\"hljs-attr\">Home:</span> <span class=\"hljs-string\">Home</span><br>  <span class=\"hljs-attr\">Archives:</span> <span class=\"hljs-string\">Archives</span><br>  <span class=\"hljs-attr\">Github:</span> <span class=\"hljs-string\">Github</span><br><br><span class=\"hljs-attr\">Paginator:</span><br>  <span class=\"hljs-attr\">Prev:</span> <span class=\"hljs-string\">Prev</span><br>  <span class=\"hljs-attr\">Next:</span> <span class=\"hljs-string\">Next</span><br></code></pre></td></tr></table></figure>\n<p>目前我们需要主题根据选择的语言自动修改的有上面这些，接着我们需要修改 <code>header.ejs</code> 与 <code>paginator.ejs</code> 这两个文件：<br><code>_partial/header.ejs</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;header <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;header&quot;</span>&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;blog-title&quot;</span>&gt;<br>    &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for() %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;logo&quot;</span>&gt;&lt;%= config.title %&gt;&lt;/a&gt;<br>  &lt;/div&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;navbar&quot;</span>&gt;<br>    &lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu&quot;</span>&gt;<br>      &lt;% <span class=\"hljs-keyword\">for</span> (name <span class=\"hljs-keyword\">in</span> theme.menu) &#123; %&gt;<br>        &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item&quot;</span>&gt;<br>          &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for(theme.menu[name]) %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item-link&quot;</span>&gt;&lt;%- __(<span class=\"hljs-string\">&#x27;Menu.&#x27;</span> + name) %&gt;&lt;/a&gt;<br>        &lt;/li&gt;<br>      &lt;% &#125; %&gt;<br>    &lt;/ul&gt;<br>  &lt;/nav&gt;<br>&lt;/header&gt;<br></code></pre></td></tr></table></figure>\n<p><code>_partial/paginator.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;% <span class=\"hljs-keyword\">if</span> (page.total &gt; <span class=\"hljs-number\">1</span>)&#123; %&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;page-nav&quot;</span>&gt;<br>    &lt;%- paginator(&#123;<br>      prev_text: <span class=\"hljs-string\">&quot;&amp;laquo;&quot;</span> + __(<span class=\"hljs-string\">&#x27;Paginator.Prev&#x27;</span>),<br>      next_text: __(<span class=\"hljs-string\">&#x27;Paginator.Next&#x27;</span>) + <span class=\"hljs-string\">&quot;&amp;raquo;&quot;</span><br>    &#125;) %&gt;<br>  &lt;/nav&gt;<br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure>\n<p>修改之后其实与之前相比没有什么变化，起码看起来是。现在我们添加一个中文的文件：<br><code>languages/zh-CN.yml</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">Menu:</span><br>  <span class=\"hljs-attr\">Home:</span> <span class=\"hljs-string\">首页</span><br>  <span class=\"hljs-attr\">Archives:</span> <span class=\"hljs-string\">归档</span><br>  <span class=\"hljs-attr\">Github:</span> <span class=\"hljs-string\">交友</span><br><br><span class=\"hljs-attr\">Paginator:</span><br>  <span class=\"hljs-attr\">Prev:</span> <span class=\"hljs-string\">上一页</span><br>  <span class=\"hljs-attr\">Next:</span> <span class=\"hljs-string\">下一页</span><br></code></pre></td></tr></table></figure>\n<p>然后我们将站点配置文件中的 <code>language</code> 字段修改为 <code>zh-CN</code>（与 <code>zh-CN.yml</code> 文件名相同）。再次访问站点之后就会发现导航与分页部分的文字变成了中文。</p>\n<h2 id=\"hexo函数\"><a href=\"#hexo函数\" class=\"headerlink\" title=\"hexo函数\"></a>hexo函数</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;%- __(<span class=\"hljs-string\">&#x27;Menu.&#x27;</span> + name) %&gt;<br></code></pre></td></tr></table></figure>\n<p>__下划线函数在 <code>hexo</code> 变量 可以查看 <code>Lodash</code> 函数，专门用于<code>json</code>取值<br>最后总结<br>如果你有耐心看我废话了这么多的话，恭喜你，你应该对怎么去写一个 <code>Hexo</code> 主题有了一定的了解。其实说白了，<code>Hexo</code> 就是把那些 <code>Markdown</code> 文件按照不同的布局模板，填上对应的数据生成 <code>HTML</code> 页面，复制 <code>source</code> 中的到生成的 <code>public</code> 文件夹中，中间过程会把需要编译的 <code>stylus/less/sass</code> 等文件编译。<br>本文并没有提及有关页面 <code>JavaScript</code> 的部分，实际上与写 <code>CSS</code> 样式相同。在 <code>source/js</code> 中写 <code>JavaScript</code> 脚本，然后在模板中引入即可。<br>感谢阅读，希望对你有所帮助。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>本文将会从零开始开发一个简单的博客主题。样式主要参考 <code>Hexo theme</code> 中的 <code>Noise</code> 主题。</p>","more":"<p>开始之前你需要了解：</p>\n<ul>\n<li>模板引擎 ejs官网</li>\n<li>CSS预处理器</li>\n<li>Hexo 文档</li>\n</ul>\n<p>本文使用的模板引擎为 <code>ejs</code>，使用的 CSS 预处理器为 <code>stylus</code>。这也是 <code>hexo</code> 项目预装了的 <code>render</code> 插件，如果想使用其他模板引擎或者其他 <code>CSS</code> 预处理器，可以安装相对应的 <code>render</code> 插件。例如我的 <code>Even</code> 主题使用的是 <code>Swig</code> 与 <code>SCSS</code>。<br>目录结构<br>主题目录结构以自带的 <code>landscape</code> 主题为例：<br>.<br>├── languages  语言文件，用于国际化<br>├── layout     页面模板文件<br>├── scripts    Hexo 脚本<br>└── source     主题资源文件，包括页面样式，脚本，字体等<br>我们在 themes 中新建 <code>theme-example</code> 文件夹，然后在 <code>theme-demo</code> 中按照 <code>landscape</code> 主题的目录结构新建 <code>languages</code>，<code>layout</code>，<code>scripts</code> 与 source 文件夹。</p>\n<h2 id=\"创建布局模板\"><a href=\"#创建布局模板\" class=\"headerlink\" title=\"创建布局模板\"></a>创建布局模板</h2><p>在 <code>layout</code> 中创建 <code>index.ejs</code> 文件，首页将会使用该布局模板生成 HTML 文件。<br><code>layout/index.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;html&gt;<br>  &lt;head&gt;<br>    &lt;meta http-equiv=<span class=\"hljs-string\">&quot;content-type&quot;</span> content=<span class=\"hljs-string\">&quot;text/html; charset=utf-8&quot;</span>&gt;<br>    &lt;meta content=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;</span> name=<span class=\"hljs-string\">&quot;viewport&quot;</span>&gt;<br>    &lt;title&gt;Home&lt;/title&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;h1&gt;Hello Word&lt;/h1&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure>\n<p>修改站点配置文件中的主题配置，使用我们刚刚创建的 <code>theme-example</code> 主题：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-comment\"># Extensions</span><br><span class=\"hljs-comment\">## Plugins: https://hexo.io/plugins/</span><br><span class=\"hljs-comment\">## Themes: https://hexo.io/themes/</span><br><span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">theme-example</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p><code>hexo clean</code>   清除<code>public</code>静态文件<br><code>hexo generate</code> 生成<code>public</code>静态文件<br><code>hexo server --debug</code> 以 <code>debug</code> 模式开启 <code>Hexo</code> 本地服务器预览，访问 <a href=\"http://localhost:4000/%E3%80%82\">http://localhost:4000/。</a></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/006tNc79gw1farp8irho3j30dq058t8s.jpg\"></p>\n<h2 id=\"写作\"><a href=\"#写作\" class=\"headerlink\" title=\"写作\"></a>写作</h2><p>在工作文件夹中执行这条命令来新建一篇文章，<code>title</code>即为文章的标题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">hexo new &lt;title&gt;　　<br></code></pre></td></tr></table></figure>\n<p>终端会返回一条信息，告诉你文章源文件存放在哪里：</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/826333/201906/826333-20190604095056843-1809346942.png\"></p>\n<h2 id=\"添加页面导航\"><a href=\"#添加页面导航\" class=\"headerlink\" title=\"添加页面导航\"></a>添加页面导航</h2><p>现在我们需要在页面中添加导航，由于导航不单单会在首页出现，所以我们在 <code>layout</code> 中创建共用的布局文件 <code>layout.ejs</code>， 同时创建 <code>_partial/head.ejs</code> 保存 HTML 的 <code>head</code> 以及创建 <code>_partial/header.ejs</code> 文件，编写页面导航部分。<br><code>layout/layout.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>  &lt;%- partial(<span class=\"hljs-string\">&#x27;_partial/head&#x27;</span>) %&gt;<br>  &lt;body&gt;<br>    &lt;%- partial(<span class=\"hljs-string\">&#x27;_partial/header&#x27;</span>) %&gt;<br>    &lt;main <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;main&quot;</span>&gt;<br>      &lt;%- body %&gt;<br>    &lt;/main&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure>\n<p><code>layout.ejs</code> 文件通过 <code>partial()</code> 函数来包含其他文件，使得我们能够更好的组织代码。详见 <code>Templates | Hexo</code>。<br><code>layout/_partial/head.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;head&gt;<br>  &lt;meta http-equiv=<span class=\"hljs-string\">&quot;content-type&quot;</span> content=<span class=\"hljs-string\">&quot;text/html; charset=utf-8&quot;</span>&gt;<br>  &lt;meta content=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;</span> name=<span class=\"hljs-string\">&quot;viewport&quot;</span>&gt;<br>  &lt;title&gt;&lt;%= config.title %&gt;&lt;/title&gt;<br>&lt;/head&gt;<br></code></pre></td></tr></table></figure>\n<p>这里使用了 <code>config</code> 变量，该变量包含的是站点配置（即站点根目录下 <code>_config.yml</code> 中的配置）。除此之外，<code>Hexo</code> 还提供了许多变量可在模板中使用，详见 <code>Variables | Hexo</code>。<br><code>layout/_partial/header.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;header <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;header&quot;</span>&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;blog-title&quot;</span>&gt;<br>    &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for() %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;logo&quot;</span>&gt;&lt;%= config.title %&gt;&lt;/a&gt;<br>  &lt;/div&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;navbar&quot;</span>&gt;<br>    &lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu&quot;</span>&gt;<br>      &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item&quot;</span>&gt;<br>        &lt;a href=<span class=\"hljs-string\">&quot;/&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item-link&quot;</span>&gt;Home&lt;/a&gt;<br>      &lt;/li&gt;<br>      &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item&quot;</span>&gt;<br>        &lt;a href=<span class=\"hljs-string\">&quot;/archives&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item-link&quot;</span>&gt;Archive&lt;/a&gt;<br>      &lt;/li&gt;<br>    &lt;/ul&gt;<br>  &lt;/nav&gt;<br>&lt;/header&gt;<br></code></pre></td></tr></table></figure>\n<p>接着我们清空 <code>index.ejs</code> 中的内容，并添加 <code>&lt;h2&gt;Hello World&lt;/h2&gt;</code>。在 <code>layout</code> 目录下的 <code>index.ejs</code> 会自动继承 <code>layout.ejs</code>，并将其中的内容填入 <code>&lt;%- body %&gt;</code> 的位置。我们将得到一个有导航菜单的 <code>Hello World</code> 页面。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/006tNc79gw1farv6wgpe1j308t05tjrk.jpg\"></p>\n<h2 id=\"添加主题配置文件\"><a href=\"#添加主题配置文件\" class=\"headerlink\" title=\"添加主题配置文件\"></a>添加主题配置文件</h2><p>实际上我们需要让导航菜单根据我们的需要显示不同的项，上面这种写法不方便修改。所以我们会在主题的配置文件中添加导航菜单的配置。在 <code>thmem-demo</code> 下新建主题的配置文件 <code>_config.yml</code>，在其中添加需要配置的字段。然后可以通过<code>theme</code>这个变量来拿到该配置文件中的配置。<br><code>theme-demo/_config.yml:</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">menu:</span><br>  <span class=\"hljs-attr\">Home:</span> <span class=\"hljs-string\">/</span><br>  <span class=\"hljs-attr\">Archives:</span> <span class=\"hljs-string\">/archives</span><br></code></pre></td></tr></table></figure>\n<p>这样我们就可以在 <code>header.ejs</code> 中使用 <code>theme.menu</code> 获取到导航菜单的设置。将 <code>header.ejs</code> 修改为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;header <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;header&quot;</span>&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;blog-title&quot;</span>&gt;<br>    &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for() %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;logo&quot;</span>&gt;&lt;%= config.title %&gt;&lt;/a&gt;<br>  &lt;/div&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;navbar&quot;</span>&gt;<br>    &lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu&quot;</span>&gt;<br>      &lt;% <span class=\"hljs-keyword\">for</span> (name <span class=\"hljs-keyword\">in</span> theme.menu) &#123; %&gt;<br>        &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item&quot;</span>&gt;<br>          &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for(theme.menu[name]) %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item-link&quot;</span>&gt;&lt;%= name %&gt;&lt;/a&gt;<br>        &lt;/li&gt;<br>      &lt;% &#125; %&gt;<br>    &lt;/ul&gt;<br>  &lt;/nav&gt;<br>&lt;/header&gt;<br></code></pre></td></tr></table></figure>\n<p>当需要在导航中添加链接的时候就可以在配置文件中直接添加，例如添加 <code>Github</code> 的链接：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">menu:</span><br>  <span class=\"hljs-attr\">Home:</span> <span class=\"hljs-string\">/</span><br>  <span class=\"hljs-attr\">Archives:</span> <span class=\"hljs-string\">/archives</span><br>  <span class=\"hljs-attr\">Github:</span> <span class=\"hljs-string\">https://github.com/ahonn</span><br></code></pre></td></tr></table></figure>\n<p>除此之外还可以添加其他需要的配置，例如 <code>RSS</code>，评论等等。</p>\n<h2 id=\"添加首页文章列表\"><a href=\"#添加首页文章列表\" class=\"headerlink\" title=\"添加首页文章列表\"></a>添加首页文章列表</h2><p>接着我们完善首页的模板，使其能够显示文章列表。前面已经说过 <code>Hexo</code> 提供了各种有用的变量，在这里将会使用到 <code>page</code> 这个变量。<code>page</code> 会根据不同的页面拥有不同的属性。具体有什么属性，可以获取到哪些数据可以查看<a href=\"https://hexo.io/docs/variables.html#Page-Variables\">这里</a>。<br>那么这里我们会使用 <code>page</code> 变量的 <code>posts</code> 属性拿到文章数据的集合。编辑 <code>index.ejs</code> 文件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;section <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;posts&quot;</span>&gt;<br>  &lt;% page.posts.each(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">post</span>) </span>&#123; %&gt;<br>    &lt;article <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post&quot;</span>&gt;<br>      &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-title&quot;</span>&gt;<br>        &lt;a <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-title-link&quot;</span> href=<span class=\"hljs-string\">&quot;&lt;%- url_for(post.path) %&gt;&quot;</span>&gt;&lt;%= post.title %&gt;&lt;/a&gt;<br>      &lt;/div&gt;<br>      &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-content&quot;</span>&gt;<br>        &lt;%- post.content %&gt;<br>      &lt;/div&gt;<br>      &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-meta&quot;</span>&gt;<br>        &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-time&quot;</span>&gt;&lt;%- date(post.date, <span class=\"hljs-string\">&quot;YYYY-MM-DD&quot;</span>) %&gt;&lt;/span&gt;<br>      &lt;/div&gt;<br>    &lt;/article&gt;<br>  &lt;% &#125;) %&gt;<br>&lt;/section&gt;<br></code></pre></td></tr></table></figure>\n<p>从 <code>page.posts</code> 中获取单篇文章的数据，并获取文章的标题，内容等数据填充到模板中。处理文章创建时间的时候使用了 <code>date()</code> 函数，这是 <code>Hexo</code> 提供的时间处理的辅助函数。本文中使用到的函数如无特别说明，即为 <code>Hexo</code> 的辅助函数。</p>\n<h2 id=\"文章摘录\"><a href=\"#文章摘录\" class=\"headerlink\" title=\"文章摘录\"></a>文章摘录</h2><p>由于首页显示文章内容时使用的是 <code>post.content</code>，即文章的全部内容。所以首页会显示每一篇文章的内容，实际上我们并不想在首页显示那么多内容，只想显示文章的摘录。<br><code>Hexo</code> 提供了 <code>excerpt</code> 属性来获取文章的摘录部分，不过这里需要在文章中添加一个 <code>&lt;!-- more --&gt;</code> 标记。添加了这个标记之后，<code>post.excerpt</code> 将会获取到标记之前的内容。如果没有这个标记，那么 <code>post.excerpt</code> 会是空的。所以我们可以把首页文章内容部分的 <code>post.content</code> 替换成 <code>post.excerpt</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-content&quot;</span>&gt;<br>  &lt;%- post.excerpt %&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure>\n<h2 id=\"添加页面样式\"><a href=\"#添加页面样式\" class=\"headerlink\" title=\"添加页面样式\"></a>添加页面样式</h2><p>到目前为止，我们完成了首页的页面结构，但是并没有添加样式，所以看起来很丑。我们在 <code>source</code> 文件中创建一个 <code>css</code> 文件夹来存放样式文件。<br>由于 <code>Hexo</code> 在新建项目的时候会安装 <code>hexo-renderer-stylus</code> 这个插件，所以我们无需其他步骤，只需要将样式文件放到 <code>css</code> 文件夹中。<code>Hexo</code> 在生成页面的时候会将 <code>source</code> 中的所有文件复制到生成的 <code>public</code> 文件中，并且在此之前会编译 <code>styl</code> 为 <code>css</code> 文件。<br>在 <code>css</code> 文件夹中创建 <code>style.styl</code>，编写一些基础的样式，并把所有样式 <code>import</code> 到这个文件。所以最终编译之后只会有 <code>style.css</code> 一个文件。创建 <code>_partial/header.styl</code> 与 <code>_partial/post.style</code> 存放页面导航以及文章的样式，并且在 <code>style.styl</code> 中 <code>import</code> 这两个文件。<br><code>_partial/header.styl:</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.header</span> &#123;<br>  <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">2em</span><br>  display: flex<br>  align-items: baseline<br>  justify-content: space-between<br><br>  .blog-title .logo &#123;<br>    color: <span class=\"hljs-number\">#AAA</span>;<br>    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2em</span>;<br>    <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&quot;Comic Sans MS&quot;</span>,cursive,LiSu,sans-serif;<br>    <span class=\"hljs-attribute\">text-decoration</span>: none;<br>  &#125;<br><br>  <span class=\"hljs-selector-class\">.menu</span> &#123;<br>    <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0</span>;<br><br>    .menu-item &#123;<br>      <span class=\"hljs-selector-tag\">display</span>: <span class=\"hljs-selector-tag\">inline-block</span>;<br>      <span class=\"hljs-selector-tag\">margin-right</span>: 10<span class=\"hljs-selector-tag\">px</span>;<br>    &#125;<br><br>    <span class=\"hljs-selector-class\">.menu-item-link</span> &#123;<br>      <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#AAA</span>;<br>      <span class=\"hljs-attribute\">text-decoration</span>: none;<br><br>      &amp;:hover &#123;<br>        <span class=\"hljs-selector-tag\">color</span>: <span class=\"hljs-selector-id\">#368CCB</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>_partial/post.styl:</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.post</span> &#123;<br>  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">1em</span> auto;<br>  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">30px</span> <span class=\"hljs-number\">50px</span>;<br>  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#fff</span>;<br>  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ddd</span>;<br>  <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">2px</span> <span class=\"hljs-number\">#ddd</span>;<br>&#125;<br><br><span class=\"hljs-selector-class\">.posts</span>  &#123;<br>  <span class=\"hljs-attribute\">.post</span>:first-child &#123;<br>    margin-top: <span class=\"hljs-number\">0</span>;<br>  &#125;<br><br>  <span class=\"hljs-selector-class\">.post-title</span> &#123;<br>    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.5em</span>;<br><br>    .post-title-link &#123;<br>      <span class=\"hljs-selector-tag\">color</span>: <span class=\"hljs-selector-id\">#368CCB</span>;<br>      <span class=\"hljs-selector-tag\">text-decoration</span>: <span class=\"hljs-selector-tag\">none</span>;<br>    &#125;<br>  &#125;<br><br>  <span class=\"hljs-selector-class\">.post-content</span> &#123;<br>    a &#123;<br>      <span class=\"hljs-selector-tag\">color</span>: <span class=\"hljs-selector-id\">#368CCB</span>;<br>      <span class=\"hljs-selector-tag\">text-decoration</span>: <span class=\"hljs-selector-tag\">none</span>;<br>    &#125;<br>  &#125;<br><br>  <span class=\"hljs-selector-class\">.post-meta</span> &#123;<br>    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#BABABA</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>style.styl:</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">body</span> &#123;<br>  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#F2F2F2</span>;<br>  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.25rem</span>;<br>  <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-number\">1.5</span>;<br>&#125;<br><br><span class=\"hljs-selector-class\">.container</span> &#123;<br>  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">960px</span>;<br>  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> auto;<br>&#125;<br><br><span class=\"hljs-keyword\">@import</span> <span class=\"hljs-string\">&quot;_partial/header&quot;</span>;<br><span class=\"hljs-keyword\">@import</span> <span class=\"hljs-string\">&quot;_partial/post&quot;</span>;<br></code></pre></td></tr></table></figure>\n<p>最后，我们需要把样式添加到页面中，这里使用了另外一个辅助函数 <code>css():</code><br><code>layout/_partial/head.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;head&gt;<br>  &lt;meta http-equiv=<span class=\"hljs-string\">&quot;content-type&quot;</span> content=<span class=\"hljs-string\">&quot;text/html; charset=utf-8&quot;</span>&gt;<br>  &lt;meta content=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;</span> name=<span class=\"hljs-string\">&quot;viewport&quot;</span>&gt;<br>  &lt;title&gt;&lt;%= config.title %&gt;&lt;/title&gt;<br>  &lt;%- css(<span class=\"hljs-string\">&#x27;css/style.css&#x27;</span>) %&gt;<br>&lt;/head&gt;<br></code></pre></td></tr></table></figure>\n<p>至此，我们会看到站点的首页是这个样子的：</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/006tNc79gw1fasg7y42bqj314h0i6jv1.jpg\"></p>\n<h2 id=\"添加分页\"><a href=\"#添加分页\" class=\"headerlink\" title=\"添加分页\"></a>添加分页</h2><p>在站点的 <code>source/_post/</code> 目录下存放的是我们的文章，现在我们把原本的 <code>hello-world.md</code> 复制黏贴 <code>10+</code> 次，再查看站点首页。会发现，首页只显示了 <code>10</code> 篇文章。<br>首页显示的文章数量我们可以通过站点配置文件中的 <code>per_page</code> 字段来修改，但是我们不可能把所有文章都放在一页，所以我们现在来添加文章列表的分页。<br>新建 <code>_partial/paginator.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;% <span class=\"hljs-keyword\">if</span> (page.total &gt; <span class=\"hljs-number\">1</span>)&#123; %&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;page-nav&quot;</span>&gt;<br>    &lt;%- paginator(&#123;<br>      prev_text: <span class=\"hljs-string\">&quot;&amp;laquo; Prev&quot;</span>,<br>      next_text: <span class=\"hljs-string\">&quot;Next &amp;raquo;&quot;</span><br>    &#125;) %&gt;<br>  &lt;/nav&gt;<br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure>\n<p>在 <code>index.ejs</code> 中添加这个文件的内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">...<br>&lt;/section&gt;<br>&lt;%- paginator(<span class=\"hljs-string\">&#x27;_partial/paginator&#x27;</span>) %&gt;<br></code></pre></td></tr></table></figure>\n<p>这里我们使用到了另外的一个辅助函数 <code>paginator</code>，它能够帮助我们插入分页链接。<br>添加文章详情页<br>文章详情页对应的布局文件是 <code>post.ejs</code>，新建 <code>post.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;article <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post&quot;</span>&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-title&quot;</span>&gt;<br>    &lt;h2 <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;title&quot;</span>&gt;&lt;%= page.title %&gt;&lt;/h2&gt;<br>  &lt;/div&gt;<br>   &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-meta&quot;</span>&gt;<br>    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-time&quot;</span>&gt;&lt;%- date(page.date, <span class=\"hljs-string\">&quot;YYYY-MM-DD&quot;</span>) %&gt;&lt;/span&gt;<br>  &lt;/div&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-content&quot;</span>&gt;<br>    &lt;%- page.content %&gt;<br>  &lt;/div&gt;<br>&lt;/article&gt;<br></code></pre></td></tr></table></figure>\n<p>由于这里是文章的模板，所以变量 <code>page</code> 表示的是文章的数据，而不是首页的文章数据集合。</p>\n<h2 id=\"添加归档页\"><a href=\"#添加归档页\" class=\"headerlink\" title=\"添加归档页\"></a>添加归档页</h2><p>创建归档页使用的模板文件 <code>archive.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;section <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;archive&quot;</span>&gt;<br>  &lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-archive&quot;</span>&gt;<br>    &lt;% page.posts.each(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">post</span>) </span>&#123; %&gt;<br>      &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-item&quot;</span>&gt;<br>        &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-date&quot;</span>&gt;&lt;%= date(post.date, <span class=\"hljs-string\">&quot;YYYY-MM-DD&quot;</span>) %&gt;&lt;/span&gt;<br>        &lt;a <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;post-title&quot;</span> href=<span class=\"hljs-string\">&quot;&lt;%- url_for(post.path) %&gt;&quot;</span>&gt;&lt;%= post.title %&gt;&lt;/a&gt;<br>      &lt;/li&gt;<br>    &lt;% &#125;) %&gt;<br>  &lt;/ul&gt;<br>&lt;/section&gt;<br>&lt;%- partial(<span class=\"hljs-string\">&#x27;_partial/paginator&#x27;</span>) %&gt;<br></code></pre></td></tr></table></figure>\n<p>其实结构跟首页差不多，只是不显示文章内容而已。添加归档页的样式：<br><code>css/_partial/archive.styl:</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.archive</span> &#123;<br>  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">1em</span> auto;<br>  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">30px</span> <span class=\"hljs-number\">50px</span>;<br>  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#fff</span>;<br>  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ddd</span>;<br>  <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">2px</span> <span class=\"hljs-number\">#ddd</span>;<br><br>  .post-archive &#123;<br>    <span class=\"hljs-selector-tag\">list-style</span>: <span class=\"hljs-selector-tag\">none</span>;<br>    <span class=\"hljs-selector-tag\">padding</span>: 0;<br><br>    <span class=\"hljs-selector-class\">.post-item</span> &#123;<br>      <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">5px</span> <span class=\"hljs-number\">0</span>;<br><br>      .post-date &#123;<br>        <span class=\"hljs-selector-tag\">display</span>: <span class=\"hljs-selector-tag\">inline-block</span>;<br>        <span class=\"hljs-selector-tag\">margin-right</span>: 10<span class=\"hljs-selector-tag\">px</span>;<br>        <span class=\"hljs-selector-tag\">color</span>: <span class=\"hljs-selector-id\">#BABABA</span>;<br>      &#125;<br><br>      <span class=\"hljs-selector-class\">.post-title</span> &#123;<br>        <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#368CCB</span>;<br>        <span class=\"hljs-attribute\">text-decoration</span>: none;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"国际化\"><a href=\"#国际化\" class=\"headerlink\" title=\"国际化\"></a>国际化</h2><p>还记得我们一开始创建的 <code>languages</code> 文件夹吗？没错，它是用来添加多种语言，用于 <code>i18n</code> 的。站点的语言设置为站点配置文件中的 <code>language</code>。<br>当该字段为空时，默认使用的是 <code>languages/default.yml</code> 这个文件。那么现在我们来添加这个文件，我们决定主题的默认语言是英文：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">Menu:</span><br>  <span class=\"hljs-attr\">Home:</span> <span class=\"hljs-string\">Home</span><br>  <span class=\"hljs-attr\">Archives:</span> <span class=\"hljs-string\">Archives</span><br>  <span class=\"hljs-attr\">Github:</span> <span class=\"hljs-string\">Github</span><br><br><span class=\"hljs-attr\">Paginator:</span><br>  <span class=\"hljs-attr\">Prev:</span> <span class=\"hljs-string\">Prev</span><br>  <span class=\"hljs-attr\">Next:</span> <span class=\"hljs-string\">Next</span><br></code></pre></td></tr></table></figure>\n<p>目前我们需要主题根据选择的语言自动修改的有上面这些，接着我们需要修改 <code>header.ejs</code> 与 <code>paginator.ejs</code> 这两个文件：<br><code>_partial/header.ejs</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;header <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;header&quot;</span>&gt;<br>  &lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;blog-title&quot;</span>&gt;<br>    &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for() %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;logo&quot;</span>&gt;&lt;%= config.title %&gt;&lt;/a&gt;<br>  &lt;/div&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;navbar&quot;</span>&gt;<br>    &lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu&quot;</span>&gt;<br>      &lt;% <span class=\"hljs-keyword\">for</span> (name <span class=\"hljs-keyword\">in</span> theme.menu) &#123; %&gt;<br>        &lt;li <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item&quot;</span>&gt;<br>          &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- url_for(theme.menu[name]) %&gt;&quot;</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;menu-item-link&quot;</span>&gt;&lt;%- __(<span class=\"hljs-string\">&#x27;Menu.&#x27;</span> + name) %&gt;&lt;/a&gt;<br>        &lt;/li&gt;<br>      &lt;% &#125; %&gt;<br>    &lt;/ul&gt;<br>  &lt;/nav&gt;<br>&lt;/header&gt;<br></code></pre></td></tr></table></figure>\n<p><code>_partial/paginator.ejs:</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;% <span class=\"hljs-keyword\">if</span> (page.total &gt; <span class=\"hljs-number\">1</span>)&#123; %&gt;<br>  &lt;nav <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">&quot;page-nav&quot;</span>&gt;<br>    &lt;%- paginator(&#123;<br>      prev_text: <span class=\"hljs-string\">&quot;&amp;laquo;&quot;</span> + __(<span class=\"hljs-string\">&#x27;Paginator.Prev&#x27;</span>),<br>      next_text: __(<span class=\"hljs-string\">&#x27;Paginator.Next&#x27;</span>) + <span class=\"hljs-string\">&quot;&amp;raquo;&quot;</span><br>    &#125;) %&gt;<br>  &lt;/nav&gt;<br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure>\n<p>修改之后其实与之前相比没有什么变化，起码看起来是。现在我们添加一个中文的文件：<br><code>languages/zh-CN.yml</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">Menu:</span><br>  <span class=\"hljs-attr\">Home:</span> <span class=\"hljs-string\">首页</span><br>  <span class=\"hljs-attr\">Archives:</span> <span class=\"hljs-string\">归档</span><br>  <span class=\"hljs-attr\">Github:</span> <span class=\"hljs-string\">交友</span><br><br><span class=\"hljs-attr\">Paginator:</span><br>  <span class=\"hljs-attr\">Prev:</span> <span class=\"hljs-string\">上一页</span><br>  <span class=\"hljs-attr\">Next:</span> <span class=\"hljs-string\">下一页</span><br></code></pre></td></tr></table></figure>\n<p>然后我们将站点配置文件中的 <code>language</code> 字段修改为 <code>zh-CN</code>（与 <code>zh-CN.yml</code> 文件名相同）。再次访问站点之后就会发现导航与分页部分的文字变成了中文。</p>\n<h2 id=\"hexo函数\"><a href=\"#hexo函数\" class=\"headerlink\" title=\"hexo函数\"></a>hexo函数</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;%- __(<span class=\"hljs-string\">&#x27;Menu.&#x27;</span> + name) %&gt;<br></code></pre></td></tr></table></figure>\n<p>__下划线函数在 <code>hexo</code> 变量 可以查看 <code>Lodash</code> 函数，专门用于<code>json</code>取值<br>最后总结<br>如果你有耐心看我废话了这么多的话，恭喜你，你应该对怎么去写一个 <code>Hexo</code> 主题有了一定的了解。其实说白了，<code>Hexo</code> 就是把那些 <code>Markdown</code> 文件按照不同的布局模板，填上对应的数据生成 <code>HTML</code> 页面，复制 <code>source</code> 中的到生成的 <code>public</code> 文件夹中，中间过程会把需要编译的 <code>stylus/less/sass</code> 等文件编译。<br>本文并没有提及有关页面 <code>JavaScript</code> 的部分，实际上与写 <code>CSS</code> 样式相同。在 <code>source/js</code> 中写 <code>JavaScript</code> 脚本，然后在模板中引入即可。<br>感谢阅读，希望对你有所帮助。</p>"},{"title":"hexo+github博客搭建","date":"2020-10-18T08:09:54.000Z","link_c":"Hexo","link_name":"Hexo+GitHub-Blog-Building","top":2002,"mathjax":true,"_content":"\n\n\n## 准备\n\n​先下载`git`和`nodejs`，[git](https://git-scm.com/downloads)、[nodejs](https://nodejs.org/en/download/).\n\n注意，`nodejs`用`msi`下载，不要下载`zip`\n\n<!--more-->\n\n​打开`git`输入\n\n```\nnode -v\nnpm -v\n```\n\n​检查nodejs是否下载好。\n\n​若显示\n```\nXX.XX.XX或VXX.XX.XX\n```\n\n​即可\n\n​然后输入\n\n```\nnpm install -g hexo\n```\n\n​等待5-30分钟，看网速。好了之后会看到一大堆乱七八糟的东西，不用管，只要有`done`没有`error`就行。\n\n## 本地建立\n\n​新建一个文件夹，以下用`blog`代替。\n\n​右键`blog`，打开`git bush`\n\n​输入\n\n```\nhexo init blog\nnpm install\n```\n\n​新建完成后，指定文件夹目录下有：\n\n- node_modules: 依赖包\n- public：存放生成的页面\n- scaffolds：生成文章的一些模板\n- source：用来存放你的文章\n- themes：主题\n- _config.yml: 博客的配置文件\n\n`cd进入myblog`\n\n​输入\n\n```\nhexo g\nhexo server\n```\n\n​打开 [localhost:4000](localhost:4000) 查看\n\n## 网上建立\n​首先，你先要有一个GitHub账户，去注册一个吧。注册完登录后，在`GitHub.com`中看到一个`New repository`，新建仓库。\n​创建一个和你用户名相同的仓库，[后面加.github.io](http://XXX.github.io/)，只有这样，将来要部署到GitHub page的时候，才会被识别，[也就是xxxx.github.io](http://XXX.github.io/)，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。\n​回到你的git bash中，\n\n```\ngit config --global user.name \"yourname\"\ngit config --global user.email \"youremail\"\n```\n\n​这里的`yourname`输入你的`GitHub`用户名，`youremail`输入你`GitHub`的邮箱。这样`GitHub`才能知道你是不是对应它的账户。\n\n​可以用以下两条，检查一下你有没有输对\n\n```\ngit config user.name\ngit config user.email\n```\n\n​然后创建`SSH`,一路回车\n\n```\nssh-keygen -t rsa -C \"youremail\"\n```\n\n​这个时候它会告诉你已经生成了`.ssh`的文件夹。在你的电脑中找到这个文件夹。\n\n​ssh，简单来讲，就是一个秘钥，其中，`id_rsa`是你这台电脑的私人秘钥，不能给别人看的，`id_rsa.pub`是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。\n\n​而后在`GitHub`的`setting`中，找到`SSH keys`的设置选项，点击`New SSH key `把你的`id_rsa.pub`里面的信息复制进去。\n\n​在`git bash`中，查看是否成功\n\n```\nssh -T git@github.com\n```\n\n​这一步，我们就可以将hexo和GitHub关联起来，也就是将`hexo`生成的文章部署到GitHub上，打开站点配置文件 `_config.yml`，翻到最后，修改为\nYourgithubName就是你的GitHub账户\n\n```\ndeploy:\n  type: git\n  repo: https://github.com/YourgithubName/YourgithubName.github.io.git\n  branch: master\n```\n\n​这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。\n\n```\nnpm install hexo-deployer-git --save\n```\n\n​然后\n\n```\nhexo clean\nhexo generate\nhexo deploy\n```\n\n​其中 `hexo clean`清除了你之前生成的东西，也可以不加。\n`hexo generate` 顾名思义，生成静态文章，可以用 `hexo g`缩写\n​`hexo deploy` 部署文章，可以用`hexo d`缩写\n\n​注意`deploy`时可能要你输入`username`和`password`。\n\n​过一会儿就可以在`http://yourname.github.io` 这个网站看到你的博客了！！(注意要过一会才会更新)","source":"_posts/hexo+github博客搭建.md","raw":"---\ntitle: hexo+github博客搭建\ndate: 2020-10-18 16:09:54\nlink_c: Hexo\nlink_name: Hexo+GitHub-Blog-Building\ntop: 2002\nmathjax: true\n---\n\n\n\n## 准备\n\n​先下载`git`和`nodejs`，[git](https://git-scm.com/downloads)、[nodejs](https://nodejs.org/en/download/).\n\n注意，`nodejs`用`msi`下载，不要下载`zip`\n\n<!--more-->\n\n​打开`git`输入\n\n```\nnode -v\nnpm -v\n```\n\n​检查nodejs是否下载好。\n\n​若显示\n```\nXX.XX.XX或VXX.XX.XX\n```\n\n​即可\n\n​然后输入\n\n```\nnpm install -g hexo\n```\n\n​等待5-30分钟，看网速。好了之后会看到一大堆乱七八糟的东西，不用管，只要有`done`没有`error`就行。\n\n## 本地建立\n\n​新建一个文件夹，以下用`blog`代替。\n\n​右键`blog`，打开`git bush`\n\n​输入\n\n```\nhexo init blog\nnpm install\n```\n\n​新建完成后，指定文件夹目录下有：\n\n- node_modules: 依赖包\n- public：存放生成的页面\n- scaffolds：生成文章的一些模板\n- source：用来存放你的文章\n- themes：主题\n- _config.yml: 博客的配置文件\n\n`cd进入myblog`\n\n​输入\n\n```\nhexo g\nhexo server\n```\n\n​打开 [localhost:4000](localhost:4000) 查看\n\n## 网上建立\n​首先，你先要有一个GitHub账户，去注册一个吧。注册完登录后，在`GitHub.com`中看到一个`New repository`，新建仓库。\n​创建一个和你用户名相同的仓库，[后面加.github.io](http://XXX.github.io/)，只有这样，将来要部署到GitHub page的时候，才会被识别，[也就是xxxx.github.io](http://XXX.github.io/)，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。\n​回到你的git bash中，\n\n```\ngit config --global user.name \"yourname\"\ngit config --global user.email \"youremail\"\n```\n\n​这里的`yourname`输入你的`GitHub`用户名，`youremail`输入你`GitHub`的邮箱。这样`GitHub`才能知道你是不是对应它的账户。\n\n​可以用以下两条，检查一下你有没有输对\n\n```\ngit config user.name\ngit config user.email\n```\n\n​然后创建`SSH`,一路回车\n\n```\nssh-keygen -t rsa -C \"youremail\"\n```\n\n​这个时候它会告诉你已经生成了`.ssh`的文件夹。在你的电脑中找到这个文件夹。\n\n​ssh，简单来讲，就是一个秘钥，其中，`id_rsa`是你这台电脑的私人秘钥，不能给别人看的，`id_rsa.pub`是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。\n\n​而后在`GitHub`的`setting`中，找到`SSH keys`的设置选项，点击`New SSH key `把你的`id_rsa.pub`里面的信息复制进去。\n\n​在`git bash`中，查看是否成功\n\n```\nssh -T git@github.com\n```\n\n​这一步，我们就可以将hexo和GitHub关联起来，也就是将`hexo`生成的文章部署到GitHub上，打开站点配置文件 `_config.yml`，翻到最后，修改为\nYourgithubName就是你的GitHub账户\n\n```\ndeploy:\n  type: git\n  repo: https://github.com/YourgithubName/YourgithubName.github.io.git\n  branch: master\n```\n\n​这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。\n\n```\nnpm install hexo-deployer-git --save\n```\n\n​然后\n\n```\nhexo clean\nhexo generate\nhexo deploy\n```\n\n​其中 `hexo clean`清除了你之前生成的东西，也可以不加。\n`hexo generate` 顾名思义，生成静态文章，可以用 `hexo g`缩写\n​`hexo deploy` 部署文章，可以用`hexo d`缩写\n\n​注意`deploy`时可能要你输入`username`和`password`。\n\n​过一会儿就可以在`http://yourname.github.io` 这个网站看到你的博客了！！(注意要过一会才会更新)","slug":"hexo+github博客搭建","published":1,"updated":"2020-12-29T11:06:28.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj9vyar90003r8b16s9y6r9l","content":"<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>​先下载<code>git</code>和<code>nodejs</code>，<a href=\"https://git-scm.com/downloads\">git</a>、<a href=\"https://nodejs.org/en/download/\">nodejs</a>.</p>\n<p>注意，<code>nodejs</code>用<code>msi</code>下载，不要下载<code>zip</code></p>\n<a id=\"more\"></a>\n\n<p>​打开<code>git</code>输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">node -v<br>npm -v<br></code></pre></td></tr></table></figure>\n\n<p>​检查nodejs是否下载好。</p>\n<p>​若显示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">XX.XX.XX或VXX.XX.XX<br></code></pre></td></tr></table></figure>\n\n<p>​即可</p>\n<p>​然后输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">npm install -g hexo<br></code></pre></td></tr></table></figure>\n\n<p>​等待5-30分钟，看网速。好了之后会看到一大堆乱七八糟的东西，不用管，只要有<code>done</code>没有<code>error</code>就行。</p>\n<h2 id=\"本地建立\"><a href=\"#本地建立\" class=\"headerlink\" title=\"本地建立\"></a>本地建立</h2><p>​新建一个文件夹，以下用<code>blog</code>代替。</p>\n<p>​右键<code>blog</code>，打开<code>git bush</code></p>\n<p>​输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">hexo init blog<br>npm install<br></code></pre></td></tr></table></figure>\n\n<p>​新建完成后，指定文件夹目录下有：</p>\n<ul>\n<li>node_modules: 依赖包</li>\n<li>public：存放生成的页面</li>\n<li>scaffolds：生成文章的一些模板</li>\n<li>source：用来存放你的文章</li>\n<li>themes：主题</li>\n<li>_config.yml: 博客的配置文件</li>\n</ul>\n<p><code>cd进入myblog</code></p>\n<p>​输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">hexo g<br>hexo server<br></code></pre></td></tr></table></figure>\n\n<p>​打开 <a href=\"localhost:4000\">localhost:4000</a> 查看</p>\n<h2 id=\"网上建立\"><a href=\"#网上建立\" class=\"headerlink\" title=\"网上建立\"></a>网上建立</h2><p>​首先，你先要有一个GitHub账户，去注册一个吧。注册完登录后，在<code>GitHub.com</code>中看到一个<code>New repository</code>，新建仓库。<br>​创建一个和你用户名相同的仓库，<a href=\"http://xxx.github.io/\">后面加.github.io</a>，只有这样，将来要部署到GitHub page的时候，才会被识别，<a href=\"http://xxx.github.io/\">也就是xxxx.github.io</a>，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。<br>​回到你的git bash中，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">git config --global user.name &quot;yourname&quot;<br>git config --global user.email &quot;youremail&quot;<br></code></pre></td></tr></table></figure>\n\n<p>​这里的<code>yourname</code>输入你的<code>GitHub</code>用户名，<code>youremail</code>输入你<code>GitHub</code>的邮箱。这样<code>GitHub</code>才能知道你是不是对应它的账户。</p>\n<p>​可以用以下两条，检查一下你有没有输对</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">git config user.name<br>git config user.email<br></code></pre></td></tr></table></figure>\n\n<p>​然后创建<code>SSH</code>,一路回车</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">ssh-keygen -t rsa -C &quot;youremail&quot;<br></code></pre></td></tr></table></figure>\n\n<p>​这个时候它会告诉你已经生成了<code>.ssh</code>的文件夹。在你的电脑中找到这个文件夹。</p>\n<p>​ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p>\n<p>​而后在<code>GitHub</code>的<code>setting</code>中，找到<code>SSH keys</code>的设置选项，点击<code>New SSH key </code>把你的<code>id_rsa.pub</code>里面的信息复制进去。</p>\n<p>​在<code>git bash</code>中，查看是否成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">ssh -T git@github.com<br></code></pre></td></tr></table></figure>\n\n<p>​这一步，我们就可以将hexo和GitHub关联起来，也就是将<code>hexo</code>生成的文章部署到GitHub上，打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为<br>YourgithubName就是你的GitHub账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">deploy:<br>  type: git<br>  repo: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git<br>  branch: master<br></code></pre></td></tr></table></figure>\n\n<p>​这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure>\n\n<p>​然后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">hexo clean<br>hexo generate<br>hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>​其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br>​<code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p>\n<p>​注意<code>deploy</code>时可能要你输入<code>username</code>和<code>password</code>。</p>\n<p>​过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了！！(注意要过一会才会更新)</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>​先下载<code>git</code>和<code>nodejs</code>，<a href=\"https://git-scm.com/downloads\">git</a>、<a href=\"https://nodejs.org/en/download/\">nodejs</a>.</p>\n<p>注意，<code>nodejs</code>用<code>msi</code>下载，不要下载<code>zip</code></p>","more":"<p>​打开<code>git</code>输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">node -v<br>npm -v<br></code></pre></td></tr></table></figure>\n\n<p>​检查nodejs是否下载好。</p>\n<p>​若显示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">XX.XX.XX或VXX.XX.XX<br></code></pre></td></tr></table></figure>\n\n<p>​即可</p>\n<p>​然后输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">npm install -g hexo<br></code></pre></td></tr></table></figure>\n\n<p>​等待5-30分钟，看网速。好了之后会看到一大堆乱七八糟的东西，不用管，只要有<code>done</code>没有<code>error</code>就行。</p>\n<h2 id=\"本地建立\"><a href=\"#本地建立\" class=\"headerlink\" title=\"本地建立\"></a>本地建立</h2><p>​新建一个文件夹，以下用<code>blog</code>代替。</p>\n<p>​右键<code>blog</code>，打开<code>git bush</code></p>\n<p>​输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">hexo init blog<br>npm install<br></code></pre></td></tr></table></figure>\n\n<p>​新建完成后，指定文件夹目录下有：</p>\n<ul>\n<li>node_modules: 依赖包</li>\n<li>public：存放生成的页面</li>\n<li>scaffolds：生成文章的一些模板</li>\n<li>source：用来存放你的文章</li>\n<li>themes：主题</li>\n<li>_config.yml: 博客的配置文件</li>\n</ul>\n<p><code>cd进入myblog</code></p>\n<p>​输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">hexo g<br>hexo server<br></code></pre></td></tr></table></figure>\n\n<p>​打开 <a href=\"localhost:4000\">localhost:4000</a> 查看</p>\n<h2 id=\"网上建立\"><a href=\"#网上建立\" class=\"headerlink\" title=\"网上建立\"></a>网上建立</h2><p>​首先，你先要有一个GitHub账户，去注册一个吧。注册完登录后，在<code>GitHub.com</code>中看到一个<code>New repository</code>，新建仓库。<br>​创建一个和你用户名相同的仓库，<a href=\"http://xxx.github.io/\">后面加.github.io</a>，只有这样，将来要部署到GitHub page的时候，才会被识别，<a href=\"http://xxx.github.io/\">也就是xxxx.github.io</a>，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。<br>​回到你的git bash中，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">git config --global user.name &quot;yourname&quot;<br>git config --global user.email &quot;youremail&quot;<br></code></pre></td></tr></table></figure>\n\n<p>​这里的<code>yourname</code>输入你的<code>GitHub</code>用户名，<code>youremail</code>输入你<code>GitHub</code>的邮箱。这样<code>GitHub</code>才能知道你是不是对应它的账户。</p>\n<p>​可以用以下两条，检查一下你有没有输对</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">git config user.name<br>git config user.email<br></code></pre></td></tr></table></figure>\n\n<p>​然后创建<code>SSH</code>,一路回车</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">ssh-keygen -t rsa -C &quot;youremail&quot;<br></code></pre></td></tr></table></figure>\n\n<p>​这个时候它会告诉你已经生成了<code>.ssh</code>的文件夹。在你的电脑中找到这个文件夹。</p>\n<p>​ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p>\n<p>​而后在<code>GitHub</code>的<code>setting</code>中，找到<code>SSH keys</code>的设置选项，点击<code>New SSH key </code>把你的<code>id_rsa.pub</code>里面的信息复制进去。</p>\n<p>​在<code>git bash</code>中，查看是否成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">ssh -T git@github.com<br></code></pre></td></tr></table></figure>\n\n<p>​这一步，我们就可以将hexo和GitHub关联起来，也就是将<code>hexo</code>生成的文章部署到GitHub上，打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为<br>YourgithubName就是你的GitHub账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">deploy:<br>  type: git<br>  repo: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git<br>  branch: master<br></code></pre></td></tr></table></figure>\n\n<p>​这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure>\n\n<p>​然后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plain\">hexo clean<br>hexo generate<br>hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>​其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br>​<code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p>\n<p>​注意<code>deploy</code>时可能要你输入<code>username</code>和<code>password</code>。</p>\n<p>​过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了！！(注意要过一会才会更新)</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}